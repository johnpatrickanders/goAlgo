{"ast":null,"code":"var _jsxFileName = \"/Users/jpa/Desktop/goAlgo/client/src/SortingViz/SortingViz.js\";\nimport React, { useState, useEffect } from 'react';\nimport bubbleSort from './bubbleSort';\nimport './SortingViz.css';\nexport default function SortingViz() {\n  const [array, setArray] = useState([]);\n  const SPEED = 100;\n  const maxBarHeight = Math.floor(window.screen.availHeight / 10);\n  const maxBarContainerWidth = Math.floor(window.screen.availWidth / 120);\n\n  const resetArray = () => {\n    const array = [];\n\n    for (let i = 0; i < maxBarContainerWidth; i += 1) {\n      array.push(randomInt(5, maxBarHeight));\n    }\n\n    setArray(array);\n  };\n\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  const bubbleSortAnimate = () => {\n    const animations = bubbleSort(array);\n    const framedAnimations = [];\n\n    for (const animation of animations) {\n      framedAnimations.push(animation.comparison);\n      framedAnimations.push(animation.comparison);\n      framedAnimations.push(animation.swap);\n    }\n\n    console.log(framedAnimations);\n\n    for (let i = 0; i < animations.length; i++) {\n      const {\n        comparison,\n        swap\n      } = animations[i];\n      const bars = document.getElementsByClassName('array-bar');\n      setTimeout(() => {\n        bars[comparison[1]].style.backgroundColor = 'blue';\n        bars[comparison[0]].style.backgroundColor = 'blue';\n        setTimeout(() => {// bars[comparison[1]].style.backgroundColor = 'red';\n          // bars[comparison[0]].style.backgroundColor = 'red';\n        }, (i + 1) * SPEED);\n      }, i * SPEED);\n      console.log(comparison);\n    }\n  }; // const mergeSort = () => {\n  //   const jsSortedArray = array.slice()\n  //   jsSortedArray.sort((a, b) => a - b)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"array-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, array.map((value, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"array-bar\",\n    key: i,\n    style: {\n      height: `${value}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Get New Array\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: bubbleSortAnimate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Bubble Sort\"));\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) * min);\n}\n\nfunction arraysEqual(array1, array2) {\n  if (array1.length !== array2.length) return false;\n\n  for (let i = 0; i < array1.length; i += 1) {\n    if (array1[i] !== array2[i]) {\n      console.log(array1[i], array2[i]);\n      return false;\n    }\n  }\n\n  return true;\n} // console.log(\"Should be TRUE:\", arraysEqual([1, 5, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 50, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 0, -1]))","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/client/src/SortingViz/SortingViz.js"],"names":["React","useState","useEffect","bubbleSort","SortingViz","array","setArray","SPEED","maxBarHeight","Math","floor","window","screen","availHeight","maxBarContainerWidth","availWidth","resetArray","i","push","randomInt","bubbleSortAnimate","animations","framedAnimations","animation","comparison","swap","console","log","length","bars","document","getElementsByClassName","setTimeout","style","backgroundColor","map","value","height","min","max","random","arraysEqual","array1","array2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bubbleSort from './bubbleSort';\nimport './SortingViz.css';\n\nexport default function SortingViz() {\n  const [array, setArray] = useState([]);\n\n  const SPEED = 100;\n\n  const maxBarHeight = Math.floor(window.screen.availHeight / 10);\n  const maxBarContainerWidth = Math.floor(window.screen.availWidth / 120);\n\n  const resetArray = () => {\n    const array = [];\n    for (let i = 0; i < maxBarContainerWidth; i += 1) {\n      array.push(randomInt(5, maxBarHeight))\n    }\n    setArray(array)\n  }\n\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  const bubbleSortAnimate = () => {\n    const animations = bubbleSort(array);\n    const framedAnimations = [];\n    for (const animation of animations) {\n      framedAnimations.push(animation.comparison);\n      framedAnimations.push(animation.comparison);\n      framedAnimations.push(animation.swap);\n    }\n    console.log(framedAnimations);\n    for (let i = 0; i < animations.length; i++) {\n      const { comparison, swap } = animations[i];\n      const bars = document.getElementsByClassName('array-bar');\n      setTimeout(() => {\n        bars[comparison[1]].style.backgroundColor = 'blue';\n        bars[comparison[0]].style.backgroundColor = 'blue';\n        setTimeout(() => {\n          // bars[comparison[1]].style.backgroundColor = 'red';\n          // bars[comparison[0]].style.backgroundColor = 'red';\n        }, (i + 1) * SPEED)\n      }, i * SPEED)\n      console.log(comparison)\n    }\n  }\n\n  // const mergeSort = () => {\n  //   const jsSortedArray = array.slice()\n  //   jsSortedArray.sort((a, b) => a - b)\n  // }\n\n  return (\n    <div className=\"array-container\">\n      {array.map((value, i) => (\n        <div\n          className=\"array-bar\"\n          key={i}\n          style={{ height: `${value}px` }}\n        >\n        </div>\n      ))}\n      <button onClick={resetArray}>Get New Array</button>\n      <button onClick={bubbleSortAnimate}>Bubble Sort</button>\n    </div>\n  )\n\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) * min)\n}\n\nfunction arraysEqual(array1, array2) {\n  if (array1.length !== array2.length) return false;\n  for (let i = 0; i < array1.length; i += 1) {\n    if (array1[i] !== array2[i]) {\n      console.log(array1[i], array2[i]);\n      return false;\n    }\n  }\n  return true;\n}\n\n// console.log(\"Should be TRUE:\", arraysEqual([1, 5, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 50, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 0, -1]))\n"]},"metadata":{},"sourceType":"module"}