{"ast":null,"code":"var _jsxFileName = \"/Users/jpa/Desktop/goAlgo/client/src/SortingViz/SortingViz.js\";\nimport React, { useState, useEffect } from 'react';\nimport bubbleSort from './bubbleSort';\nimport './SortingViz.css';\nexport default function SortingViz() {\n  const [array, setArray] = useState([]);\n  const maxBarHeight = Math.floor(window.screen.availHeight / 10);\n  const maxBarContainerWidth = Math.floor(window.screen.availWidth / 120);\n\n  const resetArray = () => {\n    const array = [];\n\n    for (let i = 0; i < maxBarContainerWidth; i += 1) {\n      array.push(randomInt(5, maxBarHeight));\n    }\n\n    setArray(array);\n  };\n\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  const bubbleSortAnimate = () => {\n    const animations = bubbleSort(array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const {\n        comparison,\n        swap\n      } = animations[i];\n      const bars = document.getElementsByClassName('array-bar'); // bars[comparison[0]].style.backgroundColor = 'blue';\n    }\n\n    bars[comparison[1]].style.backgroundColor = 'blue';\n    console.log(comparison);\n  }; // const mergeSort = () => {\n  //   const jsSortedArray = array.slice()\n  //   jsSortedArray.sort((a, b) => a - b)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"array-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, array.map((value, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"array-bar\",\n    key: i,\n    style: {\n      height: `${value}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Get New Array\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: bubbleSortAnimate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Bubble Sort\"));\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) * min);\n}\n\nfunction arraysEqual(array1, array2) {\n  if (array1.length !== array2.length) return false;\n\n  for (let i = 0; i < array1.length; i += 1) {\n    if (array1[i] !== array2[i]) {\n      console.log(array1[i], array2[i]);\n      return false;\n    }\n  }\n\n  return true;\n} // console.log(\"Should be TRUE:\", arraysEqual([1, 5, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 50, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 0, -1]))","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/client/src/SortingViz/SortingViz.js"],"names":["React","useState","useEffect","bubbleSort","SortingViz","array","setArray","maxBarHeight","Math","floor","window","screen","availHeight","maxBarContainerWidth","availWidth","resetArray","i","push","randomInt","bubbleSortAnimate","animations","length","comparison","swap","bars","document","getElementsByClassName","style","backgroundColor","console","log","map","value","height","min","max","random","arraysEqual","array1","array2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bubbleSort from './bubbleSort';\nimport './SortingViz.css';\n\nexport default function SortingViz() {\n  const [array, setArray] = useState([]);\n\n  const maxBarHeight = Math.floor(window.screen.availHeight / 10);\n  const maxBarContainerWidth = Math.floor(window.screen.availWidth / 120);\n\n  const resetArray = () => {\n    const array = [];\n    for (let i = 0; i < maxBarContainerWidth; i += 1) {\n      array.push(randomInt(5, maxBarHeight))\n    }\n    setArray(array)\n  }\n\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  const bubbleSortAnimate = () => {\n    const animations = bubbleSort(array);\n    for (let i = 0; i < animations.length; i++) {\n      const { comparison, swap } = animations[i];\n      const bars = document.getElementsByClassName('array-bar');\n      // bars[comparison[0]].style.backgroundColor = 'blue';\n    }\n    bars[comparison[1]].style.backgroundColor = 'blue';\n    console.log(comparison)\n  }\n\n  // const mergeSort = () => {\n  //   const jsSortedArray = array.slice()\n  //   jsSortedArray.sort((a, b) => a - b)\n  // }\n\n  return (\n    <div className=\"array-container\">\n      {array.map((value, i) => (\n        <div\n          className=\"array-bar\"\n          key={i}\n          style={{ height: `${value}px` }}\n        >\n        </div>\n      ))}\n      <button onClick={resetArray}>Get New Array</button>\n      <button onClick={bubbleSortAnimate}>Bubble Sort</button>\n    </div>\n  )\n\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) * min)\n}\n\nfunction arraysEqual(array1, array2) {\n  if (array1.length !== array2.length) return false;\n  for (let i = 0; i < array1.length; i += 1) {\n    if (array1[i] !== array2[i]) {\n      console.log(array1[i], array2[i]);\n      return false;\n    }\n  }\n  return true;\n}\n\n// console.log(\"Should be TRUE:\", arraysEqual([1, 5, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 50, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 0, -1]))\n"]},"metadata":{},"sourceType":"module"}