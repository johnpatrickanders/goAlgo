{"ast":null,"code":"var _jsxFileName = \"/Users/jpa/Desktop/goAlgo/client/src/SortingViz/SortingViz.js\";\nimport React, { useState, useEffect } from 'react';\nimport './SortingViz.css';\nexport default function SortingViz() {\n  const [array, setArray] = useState([]);\n  const maxBarHeight = Math.floor(window.screen.availHeight / 10);\n  const maxBarContainerWidth = Math.floor(window.screen.availWidth / 12);\n  console.log(maxBarHeight);\n\n  const resetArray = () => {\n    const array = [];\n\n    for (let i = 0; i < maxBarContainerWidth; i += 1) {\n      array.push(randomInt(5, maxBarHeight));\n    }\n\n    setArray(array);\n  };\n\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  const mergeSort = () => {\n    const jsSortedArray = array.slice();\n    jsSortedArray.sort((a, b) => a - b);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"array-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, array.map((value, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"array-bar\",\n    key: i,\n    style: {\n      height: `${value}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetArray,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Get New Array\"));\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) * min);\n}","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/client/src/SortingViz/SortingViz.js"],"names":["React","useState","useEffect","SortingViz","array","setArray","maxBarHeight","Math","floor","window","screen","availHeight","maxBarContainerWidth","availWidth","console","log","resetArray","i","push","randomInt","mergeSort","jsSortedArray","slice","sort","a","b","map","value","height","min","max","random"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMK,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,MAAP,CAAcC,WAAd,GAA4B,EAAvC,CAArB;AACA,QAAMC,oBAAoB,GAAGL,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,MAAP,CAAcG,UAAd,GAA2B,EAAtC,CAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,YAAZ;;AAEA,QAAMU,UAAU,GAAG,MAAM;AACvB,UAAMZ,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,oBAApB,EAA0CK,CAAC,IAAI,CAA/C,EAAkD;AAChDb,MAAAA,KAAK,CAACc,IAAN,CAAWC,SAAS,CAAC,CAAD,EAAIb,YAAJ,CAApB;AACD;;AACDD,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAND;;AAQAF,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMI,SAAS,GAAG,MAAM;AACtB,UAAMC,aAAa,GAAGjB,KAAK,CAACkB,KAAN,EAAtB;AACAD,IAAAA,aAAa,CAACE,IAAd,CAAmB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAAjC;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,KAAK,CAACsB,GAAN,CAAU,CAACC,KAAD,EAAQV,CAAR,kBACT;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,EAAEA,CAFP;AAGE,IAAA,KAAK,EAAE;AAAEW,MAAAA,MAAM,EAAG,GAAED,KAAM;AAAnB,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,eASE;AAAQ,IAAA,OAAO,EAAEX,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF,CADF;AAcD;;AAED,SAASG,SAAT,CAAmBU,GAAnB,EAAwBC,GAAxB,EAA6B;AAC3B,SAAOvB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACwB,MAAL,MAAiBD,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './SortingViz.css';\n\nexport default function SortingViz() {\n  const [array, setArray] = useState([]);\n\n  const maxBarHeight = Math.floor(window.screen.availHeight / 10);\n  const maxBarContainerWidth = Math.floor(window.screen.availWidth / 12);\n  console.log(maxBarHeight)\n\n  const resetArray = () => {\n    const array = [];\n    for (let i = 0; i < maxBarContainerWidth; i += 1) {\n      array.push(randomInt(5, maxBarHeight))\n    }\n    setArray(array)\n  }\n\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  const mergeSort = () => {\n    const jsSortedArray = array.slice()\n    jsSortedArray.sort((a, b) => a - b)\n  }\n\n  return (\n    <div className=\"array-container\">\n      {array.map((value, i) => (\n        <div\n          className=\"array-bar\"\n          key={i}\n          style={{ height: `${value}px` }}\n        >\n        </div>\n      ))}\n      <button onClick={resetArray}>Get New Array</button>\n    </div>\n  )\n\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) * min)\n}\n"]},"metadata":{},"sourceType":"module"}