{"ast":null,"code":"export default function depthFirstSearch(grid, startNode, endNode) {\n  const pathOfNodes = depthFirstSearchHelp(startNode, grid);\n  return pathOfNodes;\n}\n\nfunction depthFirstSearchHelp(currentNode, grid, neighbors, array = []) {\n  if (currentNode.isFinish) return;\n\n  if (!currentNode.isStart) {\n    currentNode.isVisited = true;\n\n    if (array.length === 1 || currentNode !== array[array.length - 1]) {\n      array.push(currentNode);\n    }\n  }\n\n  neighbors = getNeighbors(currentNode, grid);\n\n  if (neighbors[0]) {\n    depthFirstSearchHelp(neighbors[0], grid, neighbors, array);\n  } else if (array[array.length - 2] && getNeighbors(array[array.length - 2], grid)) {\n    array.pop();\n    depthFirstSearchHelp(array[array.length - 1], grid, neighbors, array);\n  }\n\n  return array;\n}\n\nfunction getNeighbors(node, grid) {\n  const neighbors = [];\n  const {\n    col,\n    row\n  } = node;\n  if (row > 0 && !grid[row - 1][col].isVisited && !grid[row - 1][col].isWall && !grid[row - 1][col].isStart) neighbors.push(grid[row - 1][col]); // \"top\"\n\n  if (col < grid[0].length - 1 && !grid[row][col + 1].isVisited && !grid[row][col + 1].isWall && !grid[row][col + 1].isStart) neighbors.push(grid[row][col + 1]); // \"right\"\n\n  if (row < grid.length - 1 && !grid[row + 1][col].isVisited && !grid[row + 1][col].isWall && !grid[row + 1][col].isStart) neighbors.push(grid[row + 1][col]); // \"bottom\"\n\n  if (col > 0 && !grid[row][col - 1].isVisited && !grid[row][col - 1].isWall && !grid[row][col - 1].isStart) neighbors.push(grid[row][col - 1]); // \"left\"\n\n  return neighbors;\n}","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/src/PathfindingViz/depthFirstSearch.js"],"names":["depthFirstSearch","grid","startNode","endNode","pathOfNodes","depthFirstSearchHelp","currentNode","neighbors","array","isFinish","isStart","isVisited","length","push","getNeighbors","pop","node","col","row","isWall"],"mappings":"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","sourcesContent":["export default function depthFirstSearch(grid, startNode, endNode) {\n\n  const pathOfNodes = depthFirstSearchHelp(startNode, grid)\n  return pathOfNodes;\n\n}\n\nfunction depthFirstSearchHelp(currentNode, grid, neighbors, array = []) {\n  if (currentNode.isFinish) return;\n  if (!currentNode.isStart) {\n    currentNode.isVisited = true;\n    if (array.length === 1 || currentNode !== array[array.length - 1]) {\n      array.push(currentNode);\n    }\n  }\n  neighbors = getNeighbors(currentNode, grid);\n  if (neighbors[0]) {\n    depthFirstSearchHelp(neighbors[0], grid, neighbors, array);\n  } else if (array[array.length - 2] && getNeighbors(array[array.length - 2], grid)) {\n    array.pop()\n    depthFirstSearchHelp(array[array.length - 1], grid, neighbors, array);\n  }\n  return array;\n}\n\n\nfunction getNeighbors(node, grid) {\n  const neighbors = [];\n  const { col, row } = node;\n  if (row > 0\n    && !grid[row - 1][col].isVisited\n    && !grid[row - 1][col].isWall\n    && !grid[row - 1][col].isStart\n  ) neighbors.push(grid[row - 1][col]); // \"top\"\n  if (col < grid[0].length - 1\n    && !grid[row][col + 1].isVisited\n    && !grid[row][col + 1].isWall\n    && !grid[row][col + 1].isStart\n  ) neighbors.push(grid[row][col + 1]) // \"right\"\n  if (row < grid.length - 1\n    && !grid[row + 1][col].isVisited\n    && !grid[row + 1][col].isWall\n    && !grid[row + 1][col].isStart) neighbors.push(grid[row + 1][col]); // \"bottom\"\n  if (col > 0\n    && !grid[row][col - 1].isVisited\n    && !grid[row][col - 1].isWall\n    && !grid[row][col - 1].isStart) neighbors.push(grid[row][col - 1]) // \"left\"\n  return neighbors;\n}\n"]},"metadata":{},"sourceType":"module"}