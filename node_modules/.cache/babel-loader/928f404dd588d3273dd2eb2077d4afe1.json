{"ast":null,"code":"import framerize from'./util';export default function quickSort(array){// Write your code here.\nvar frames=framerize(quickSortHelper(array,0,array.length-1));return frames;}function quickSortHelper(array,startIdx,endIdx){var animations=arguments.length>3&&arguments[3]!==undefined?arguments[3]:[];if(startIdx>=endIdx)return;var pivotIdx=startIdx;var leftIdx=startIdx+1;var rightIdx=endIdx;while(rightIdx>=leftIdx){var _animation={};_animation.comparison=[leftIdx,rightIdx,pivotIdx];if(array[leftIdx]>array[pivotIdx]&&array[rightIdx]<array[pivotIdx]){swap(array,leftIdx,rightIdx);_animation.swap=[leftIdx,rightIdx,pivotIdx];}else{_animation.swap=[0,0,pivotIdx];}animations.push(_animation);if(array[leftIdx]<=array[pivotIdx])leftIdx+=1;if(array[rightIdx]>=array[pivotIdx])rightIdx-=1;}swap(array,pivotIdx,rightIdx);var animation={};animation.comparison=[pivotIdx,rightIdx,pivotIdx];animation.swap=[pivotIdx,rightIdx,pivotIdx];animations.push(animation);var leftSubArrIsSmaller=rightIdx-1-startIdx<endIdx-(rightIdx+1);if(leftSubArrIsSmaller){quickSortHelper(array,startIdx,rightIdx-1,animations);quickSortHelper(array,rightIdx+1,endIdx,animations);}else{quickSortHelper(array,rightIdx+1,endIdx,animations);quickSortHelper(array,startIdx,rightIdx-1,animations);}return animations;}function swap(array,i,j){var temp=array[i];array[i]=array[j];array[j]=temp;}","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/src/SortingViz/quickSort.js"],"names":["framerize","quickSort","array","frames","quickSortHelper","length","startIdx","endIdx","animations","pivotIdx","leftIdx","rightIdx","animation","comparison","swap","push","leftSubArrIsSmaller","i","j","temp"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,QAAtB,CAEA,cAAe,SAASC,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACvC;AACA,GAAMC,CAAAA,MAAM,CAAGH,SAAS,CAACI,eAAe,CAACF,KAAD,CAAQ,CAAR,CAAWA,KAAK,CAACG,MAAN,CAAe,CAA1B,CAAhB,CAAxB,CACA,MAAOF,CAAAA,MAAP,CACD,CAED,QAASC,CAAAA,eAAT,CAAyBF,KAAzB,CAAgCI,QAAhC,CAA0CC,MAA1C,CAAmE,IAAjBC,CAAAA,UAAiB,2DAAJ,EAAI,CACjE,GAAIF,QAAQ,EAAIC,MAAhB,CAAwB,OACxB,GAAME,CAAAA,QAAQ,CAAGH,QAAjB,CACA,GAAII,CAAAA,OAAO,CAAGJ,QAAQ,CAAG,CAAzB,CACA,GAAIK,CAAAA,QAAQ,CAAGJ,MAAf,CACA,MAAOI,QAAQ,EAAID,OAAnB,CAA4B,CAC1B,GAAME,CAAAA,UAAS,CAAG,EAAlB,CACAA,UAAS,CAACC,UAAV,CAAuB,CAACH,OAAD,CAAUC,QAAV,CAAoBF,QAApB,CAAvB,CACA,GAAIP,KAAK,CAACQ,OAAD,CAAL,CAAiBR,KAAK,CAACO,QAAD,CAAtB,EAAoCP,KAAK,CAACS,QAAD,CAAL,CAAkBT,KAAK,CAACO,QAAD,CAA/D,CAA2E,CACzEK,IAAI,CAACZ,KAAD,CAAQQ,OAAR,CAAiBC,QAAjB,CAAJ,CACAC,UAAS,CAACE,IAAV,CAAiB,CAACJ,OAAD,CAAUC,QAAV,CAAoBF,QAApB,CAAjB,CACD,CAHD,IAGO,CACLG,UAAS,CAACE,IAAV,CAAiB,CAAC,CAAD,CAAI,CAAJ,CAAOL,QAAP,CAAjB,CACD,CACDD,UAAU,CAACO,IAAX,CAAgBH,UAAhB,EACA,GAAIV,KAAK,CAACQ,OAAD,CAAL,EAAkBR,KAAK,CAACO,QAAD,CAA3B,CAAuCC,OAAO,EAAI,CAAX,CACvC,GAAIR,KAAK,CAACS,QAAD,CAAL,EAAmBT,KAAK,CAACO,QAAD,CAA5B,CAAwCE,QAAQ,EAAI,CAAZ,CACzC,CACDG,IAAI,CAACZ,KAAD,CAAQO,QAAR,CAAkBE,QAAlB,CAAJ,CACA,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CACAA,SAAS,CAACC,UAAV,CAAuB,CAACJ,QAAD,CAAWE,QAAX,CAAqBF,QAArB,CAAvB,CACAG,SAAS,CAACE,IAAV,CAAiB,CAACL,QAAD,CAAWE,QAAX,CAAqBF,QAArB,CAAjB,CACAD,UAAU,CAACO,IAAX,CAAgBH,SAAhB,EACA,GAAMI,CAAAA,mBAAmB,CAAGL,QAAQ,CAAG,CAAX,CAAeL,QAAf,CAA0BC,MAAM,EAAII,QAAQ,CAAG,CAAf,CAA5D,CACA,GAAIK,mBAAJ,CAAyB,CACvBZ,eAAe,CAACF,KAAD,CAAQI,QAAR,CAAkBK,QAAQ,CAAG,CAA7B,CAAgCH,UAAhC,CAAf,CACAJ,eAAe,CAACF,KAAD,CAAQS,QAAQ,CAAG,CAAnB,CAAsBJ,MAAtB,CAA8BC,UAA9B,CAAf,CACD,CAHD,IAGO,CACLJ,eAAe,CAACF,KAAD,CAAQS,QAAQ,CAAG,CAAnB,CAAsBJ,MAAtB,CAA8BC,UAA9B,CAAf,CACAJ,eAAe,CAACF,KAAD,CAAQI,QAAR,CAAkBK,QAAQ,CAAG,CAA7B,CAAgCH,UAAhC,CAAf,CACD,CACD,MAAOA,CAAAA,UAAP,CACD,CAED,QAASM,CAAAA,IAAT,CAAcZ,KAAd,CAAqBe,CAArB,CAAwBC,CAAxB,CAA2B,CACzB,GAAMC,CAAAA,IAAI,CAAGjB,KAAK,CAACe,CAAD,CAAlB,CACAf,KAAK,CAACe,CAAD,CAAL,CAAWf,KAAK,CAACgB,CAAD,CAAhB,CACAhB,KAAK,CAACgB,CAAD,CAAL,CAAWC,IAAX,CACD","sourcesContent":["import framerize from './util';\n\nexport default function quickSort(array) {\n  // Write your code here.\n  const frames = framerize(quickSortHelper(array, 0, array.length - 1));\n  return frames;\n}\n\nfunction quickSortHelper(array, startIdx, endIdx, animations = []) {\n  if (startIdx >= endIdx) return;\n  const pivotIdx = startIdx;\n  let leftIdx = startIdx + 1;\n  let rightIdx = endIdx;\n  while (rightIdx >= leftIdx) {\n    const animation = {};\n    animation.comparison = [leftIdx, rightIdx, pivotIdx]\n    if (array[leftIdx] > array[pivotIdx] && array[rightIdx] < array[pivotIdx]) {\n      swap(array, leftIdx, rightIdx);\n      animation.swap = [leftIdx, rightIdx, pivotIdx];\n    } else {\n      animation.swap = [0, 0, pivotIdx]\n    }\n    animations.push(animation);\n    if (array[leftIdx] <= array[pivotIdx]) leftIdx += 1;\n    if (array[rightIdx] >= array[pivotIdx]) rightIdx -= 1;\n  }\n  swap(array, pivotIdx, rightIdx);\n  const animation = {};\n  animation.comparison = [pivotIdx, rightIdx, pivotIdx];\n  animation.swap = [pivotIdx, rightIdx, pivotIdx];\n  animations.push(animation);\n  const leftSubArrIsSmaller = rightIdx - 1 - startIdx < endIdx - (rightIdx + 1)\n  if (leftSubArrIsSmaller) {\n    quickSortHelper(array, startIdx, rightIdx - 1, animations);\n    quickSortHelper(array, rightIdx + 1, endIdx, animations);\n  } else {\n    quickSortHelper(array, rightIdx + 1, endIdx, animations);\n    quickSortHelper(array, startIdx, rightIdx - 1, animations);\n  }\n  return animations\n}\n\nfunction swap(array, i, j) {\n  const temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\n"]},"metadata":{},"sourceType":"module"}