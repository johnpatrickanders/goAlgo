{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/jpa/Desktop/goAlgo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/jpa/Desktop/goAlgo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import bubbleSort from'./bubbleSort';import insertionSort from'./insertionSort';import selectionSort from'./selectionSort';import quickSort from'./quickSort';import'./SortingViz.css';import Slider from'./SpeedControls';export default function SortingViz(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),array=_useState2[0],setArray=_useState2[1];var _useState3=useState(20),_useState4=_slicedToArray(_useState3,2),NUM_BARS=_useState4[0],SET_NUM_BARS=_useState4[1];var handleBarChange=function handleBarChange(e){NUM_BARS=e.target.value;SET_NUM_BARS(NUM_BARS);resetArray();resetColors();};var _useState5=useState(150),_useState6=_slicedToArray(_useState5,2),SPEED=_useState6[0],setSpeed=_useState6[1];var handleChange=function handleChange(e){SPEED=e.target.value;setSpeed(SPEED);};var convertedSpeed=301-SPEED;var comparisonColor='green';var swapColor='white';var otherColor='orange';var maxBarHeight=Math.floor(window.screen.availHeight/10);var maxBarContainerWidth=Math.floor(window.screen.availWidth/150);var stopLoop=false;var numStops=0;var resetColors=function resetColors(color){var bars=document.getElementsByClassName('array-bar');// if (!color) color = 'orangered';\nvar _iterator=_createForOfIteratorHelper(bars),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var bar=_step.value;bar.style.backgroundColor=color;}}catch(err){_iterator.e(err);}finally{_iterator.f();}console.log(bars);console.log(\"COLOOOOOORS\");};var resetArray=function resetArray(){var array=[];for(var i=0;i<NUM_BARS;i+=1){array.push(randomInt(5,maxBarHeight));}setArray(array);resetColors();};var stop=function stop(){if(!stopLoop){stopLoop=!stopLoop;stopLoop=!stopLoop;}while(numStops>=0){clearTimeout(numStops);console.log(\"STOPPPPPP\");numStops--;}numStops=0;};useEffect(function(){resetArray();},[]);var bubbleSortAnimate=function bubbleSortAnimate(){var animations=bubbleSort(array);console.log(animations);var _loop=function _loop(i){var bars=document.getElementsByClassName('array-bar');var _animations$i=_slicedToArray(animations[i],2),barOneIdx=_animations$i[0],barTwoIdx=_animations$i[1];var barOne=bars[barOneIdx].style;var barTwo=bars[barTwoIdx].style;var isColorChange=i%3!==2;if(isColorChange){// if the index falls just BEFORE the swap (i.e. on 2nd comparison)\nsetTimeout(function(){var currentBarColor=i%3===0?swapColor:comparisonColor;// if the index falls on the \"swap\" value...\nbarOne.backgroundColor=currentBarColor;barTwo.backgroundColor=currentBarColor;},i*convertedSpeed);}else{setTimeout(function(){if(barOneIdx>barTwoIdx){var tempHeight=barOne.height;barOne.height=barTwo.height;barTwo.height=tempHeight;barOne.backgroundColor=otherColor;}},i*convertedSpeed);}numStops+=1;};for(var i=0;i<animations.length&&!stopLoop;i++){_loop(i);}};var insertionSortAnimate=function insertionSortAnimate(){var animations=insertionSort(array);console.log(array.length);console.log(animations);var bars=document.getElementsByClassName('array-bar');var _loop2=function _loop2(i){var _animations$i2=_slicedToArray(animations[i],2),currIdx=_animations$i2[0],otherIdx=_animations$i2[1];var barOne=bars[currIdx].style;var barTwo=bars[otherIdx].style;var isColorChange=i%3!==2;if(isColorChange){// if the index falls just BEFORE the swap (i.e. on 2nd comparison)\nsetTimeout(function(){var currentBarColor=i%3===0?swapColor:comparisonColor;// if the index falls on the \"swap\" value...\nbarOne.backgroundColor=otherColor;for(var _i=currIdx-1;_i>=0;_i--){var bar=bars[_i];bar.style.backgroundColor=currentBarColor;}},i*convertedSpeed);}else{setTimeout(function(){var _ref=animations[i-3]?animations[i-3]:[0,0],_ref2=_slicedToArray(_ref,2),prevCurrIdx=_ref2[0],prevOtherIdx=_ref2[1];if(currIdx!==otherIdx){var initIdx=currIdx;var splice=function splice(currIdx,startIdx,subArr){while(currIdx>startIdx){var temp=subArr[currIdx].style.height;subArr[currIdx].style.height=subArr[currIdx-1].style.height;subArr[currIdx-1].style.height=temp;var tempColor=subArr[currIdx].style.backgroundColor;subArr[currIdx].style.backgroundColor=subArr[currIdx-1].style.backgroundColor;subArr[currIdx-1].style.backgroundColor=tempColor;currIdx-=1;}};for(otherIdx;otherIdx<currIdx;otherIdx++){if(currIdx===initIdx){splice(currIdx,otherIdx,bars);initIdx=-1;otherIdx-=1;}}}if(i===animations.length-1)bars[currIdx-1].style.backgroundColor=comparisonColor;},i*convertedSpeed);}};for(var i=0;i<animations.length;i++){_loop2(i);}// resetColors(comparisonColor);\n};var selectionSortAnimate=function selectionSortAnimate(){var animations=selectionSort(array);console.log(animations);var _loop3=function _loop3(i){var bars=document.getElementsByClassName('array-bar');var _animations$i3=_slicedToArray(animations[i],2),barOneIdx=_animations$i3[0],barTwoIdx=_animations$i3[1];var barOne=bars[barOneIdx].style;var barTwo=bars[barTwoIdx].style;var isColorChange=i%3!==2;if(isColorChange){// if the index falls just BEFORE the swap (i.e. on 2nd comparison)\nsetTimeout(function(){var currentBarColor=i%3===0?swapColor:comparisonColor;// if the index falls on the \"swap\" value...\nbarOne.backgroundColor=currentBarColor;barTwo.backgroundColor=currentBarColor;},i*convertedSpeed);}else{setTimeout(function(){var _animations=_slicedToArray(animations[i-1],2),prevBarOneIdx=_animations[0],prevBarTwoIdx=_animations[1];if(barOneIdx!==prevBarOneIdx||barTwoIdx!==prevBarTwoIdx||barTwoIdx===array.length-1||i===animations.length-1){var tempHeight=barOne.height;barOne.height=barTwo.height;barTwo.height=tempHeight;barOne.backgroundColor=otherColor;}},i*convertedSpeed);}};for(var i=0;i<animations.length;i++){_loop3(i);}};var quickSortAnimate=function quickSortAnimate(){var animations=quickSort(array);console.log(animations);var _loop4=function _loop4(i){var bars=document.getElementsByClassName('array-bar');var _animations$i4=_slicedToArray(animations[i],3),barOneIdx=_animations$i4[0],barTwoIdx=_animations$i4[1],pivotIdx=_animations$i4[2];var barOne=bars[barOneIdx].style;var barTwo=bars[barTwoIdx].style;var barPivot=bars[pivotIdx].style;var isColorChange=i%3!==2;if(isColorChange){// if the index falls just BEFORE the swap (i.e. on 2nd comparison)\nsetTimeout(function(){var currentBarColor=i%3===0?otherColor:comparisonColor;// if the index falls on the \"swap\" value...\nbarPivot.backgroundColor=swapColor;barOne.backgroundColor=currentBarColor;barTwo.backgroundColor=currentBarColor;if(barOneIdx===pivotIdx&&barTwoIdx>0){barOne.backgroundColor='yellow';barTwo.backgroundColor='yellow';}},i*convertedSpeed);}else{setTimeout(function(){if(barOneIdx!==0&&barTwoIdx!==0// normal \"while\" swap\n||i===animations.length-1){var tempHeight=barOne.height;barOne.height=barTwo.height;barTwo.height=tempHeight;barOne.backgroundColor=comparisonColor;barTwo.backgroundColor=comparisonColor;}else if(barOneIdx===pivotIdx&&barTwoIdx>0){// special \"pivot\" swap\nbarPivot.backgroundColor=swapColor;var _tempHeight=barOne.height;barOne.height=barTwo.height;barTwo.height=_tempHeight;barPivot.backgroundColor=comparisonColor;}// barPivot.backgroundColor = comparisonColor;\nbarTwo.backgroundColor=comparisonColor;},i*convertedSpeed);}};for(var i=0;i<animations.length;i++){_loop4(i);}};var animateAlgo=function animateAlgo(){var algos=[bubbleSortAnimate,insertionSortAnimate,selectionSortAnimate,quickSortAnimate];var algoIdxString=document.getElementById('sorting-options').options.selectedIndex;var algoIdx=Number(algoIdxString);algos[algoIdx]();};return/*#__PURE__*/React.createElement(\"div\",{className:\"algo-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"array-container\"},array.map(function(value,i){return/*#__PURE__*/React.createElement(\"div\",{className:\"array-bar\",key:i,style:{height:\"\".concat(value,\"px\"),backgroundColor:'orangered',width:\"\".concat(90/NUM_BARS,\"vh\"),display:'inline-block',margin:1}});})),/*#__PURE__*/React.createElement(\"div\",{className:\"slidercontainer\"},/*#__PURE__*/React.createElement(\"input\",{onChange:handleChange,type:\"range\",list:\"tickmarks\",min:\"1\",max:\"301\"// value={SPEED}\n// onChange={setSpeed}\n,step:\"60\",className:\"slidercontianer\",id:\"my-range\",name:\"Speed\"}),/*#__PURE__*/React.createElement(\"label\",{className:\"sliderlabel\",for:\"myRange\"},\"Speed\")),/*#__PURE__*/React.createElement(\"div\",{className:\"slidercontainer\"},/*#__PURE__*/React.createElement(\"input\",{onChange:handleBarChange,type:\"range\",min:\"8\",max:\"200\",value:NUM_BARS,className:\"slider\",id:\"myBarRange\",name:\"Length\"}),/*#__PURE__*/React.createElement(\"label\",{className:\"sliderlabel\",for:\"myBarRange\"},\"Length\")),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons\"},/*#__PURE__*/React.createElement(\"button\",{onClick:resetArray},\"Get New Array\"),/*#__PURE__*/React.createElement(\"select\",{label:\"Choose an Algo\",name:\"sorting-options\",id:\"sorting-options\"},/*#__PURE__*/React.createElement(\"option\",{label:\"Bubble\",value:\"0\"}),/*#__PURE__*/React.createElement(\"option\",{label:\"Insertion\",value:\"1\"}),/*#__PURE__*/React.createElement(\"option\",{label:\"Selection\",value:\"2\"}),/*#__PURE__*/React.createElement(\"option\",{label:\"Quick\",value:\"3\"})),/*#__PURE__*/React.createElement(\"button\",{onClick:animateAlgo},\"Sort!\")));}function randomInt(min,max){return Math.floor(Math.random()*(max-min+1)*min);}function arraysEqual(array1,array2){if(array1.length!==array2.length)return false;for(var i=0;i<array1.length;i+=1){if(array1[i]!==array2[i]){console.log(array1[i],array2[i]);return false;}}return true;}// console.log(\"Should be TRUE:\", arraysEqual([1, 5, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 50, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 0, -1]))","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/client/src/SortingViz/SortingViz.js"],"names":["React","useState","useEffect","bubbleSort","insertionSort","selectionSort","quickSort","Slider","SortingViz","array","setArray","NUM_BARS","SET_NUM_BARS","handleBarChange","e","target","value","resetArray","resetColors","SPEED","setSpeed","handleChange","convertedSpeed","comparisonColor","swapColor","otherColor","maxBarHeight","Math","floor","window","screen","availHeight","maxBarContainerWidth","availWidth","stopLoop","numStops","color","bars","document","getElementsByClassName","bar","style","backgroundColor","console","log","i","push","randomInt","stop","clearTimeout","bubbleSortAnimate","animations","barOneIdx","barTwoIdx","barOne","barTwo","isColorChange","setTimeout","currentBarColor","tempHeight","height","length","insertionSortAnimate","currIdx","otherIdx","prevCurrIdx","prevOtherIdx","initIdx","splice","startIdx","subArr","temp","tempColor","selectionSortAnimate","prevBarOneIdx","prevBarTwoIdx","quickSortAnimate","pivotIdx","barPivot","animateAlgo","algos","algoIdxString","getElementById","options","selectedIndex","algoIdx","Number","map","width","display","margin","min","max","random","arraysEqual","array1","array2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bubbleSort from './bubbleSort';\nimport insertionSort from './insertionSort';\nimport selectionSort from './selectionSort';\nimport quickSort from './quickSort';\nimport './SortingViz.css';\nimport Slider from './SpeedControls';\n\nexport default function SortingViz() {\n  const [array, setArray] = useState([]);\n  let [NUM_BARS, SET_NUM_BARS] = useState(20);\n  const handleBarChange = (e) => {\n    NUM_BARS = e.target.value;\n    SET_NUM_BARS(NUM_BARS);\n    resetArray()\n    resetColors()\n  }\n\n  let [SPEED, setSpeed] = useState(150)\n  const handleChange = (e) => {\n    SPEED = e.target.value;\n    setSpeed(SPEED)\n  }\n  let convertedSpeed = 301 - SPEED;\n\n  let comparisonColor = 'green';\n  let swapColor = 'white';\n  let otherColor = 'orange';\n\n  const maxBarHeight = Math.floor(window.screen.availHeight / 10);\n  const maxBarContainerWidth = Math.floor(window.screen.availWidth / 150);\n\n  let stopLoop = false;\n  let numStops = 0;\n\n  const resetColors = (color) => {\n    const bars = document.getElementsByClassName('array-bar');\n    // if (!color) color = 'orangered';\n    for (let bar of bars) {\n      bar.style.backgroundColor = color;\n    }\n    console.log(bars)\n    console.log(\"COLOOOOOORS\");\n  }\n  const resetArray = () => {\n    const array = [];\n    for (let i = 0; i < NUM_BARS; i += 1) {\n      array.push(randomInt(5, maxBarHeight))\n    }\n    setArray(array)\n    resetColors();\n  }\n\n\n  const stop = () => {\n    if (!stopLoop) {\n      stopLoop = !stopLoop;\n      stopLoop = !stopLoop;\n    }\n    while (numStops >= 0) {\n      clearTimeout(numStops);\n      console.log(\"STOPPPPPP\");\n      numStops--;\n    }\n    numStops = 0;\n  }\n\n  useEffect(() => {\n    resetArray();\n  }, []);\n\n  const bubbleSortAnimate = () => {\n    const animations = bubbleSort(array);\n    console.log(animations)\n    for (let i = 0; i < animations.length && !stopLoop; i++) {\n      const bars = document.getElementsByClassName('array-bar');\n      const [barOneIdx, barTwoIdx] = animations[i];\n      const barOne = bars[barOneIdx].style;\n      const barTwo = bars[barTwoIdx].style;\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) { // if the index falls just BEFORE the swap (i.e. on 2nd comparison)\n        setTimeout(() => {\n          const currentBarColor = i % 3 === 0 ? swapColor : comparisonColor; // if the index falls on the \"swap\" value...\n          barOne.backgroundColor = currentBarColor;\n          barTwo.backgroundColor = currentBarColor;\n        }, i * convertedSpeed)\n      } else {\n        setTimeout(() => {\n          if (barOneIdx > barTwoIdx) {\n            const tempHeight = barOne.height;\n            barOne.height = barTwo.height;\n            barTwo.height = tempHeight;\n            barOne.backgroundColor = otherColor;\n          }\n        }, i * convertedSpeed);\n      }\n      numStops += 1;\n    }\n\n  }\n\n  const insertionSortAnimate = () => {\n    const animations = insertionSort(array);\n    console.log(array.length)\n    console.log(animations)\n    const bars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < animations.length; i++) {\n      let [currIdx, otherIdx] = animations[i];\n      const barOne = bars[currIdx].style;\n      const barTwo = bars[otherIdx].style;\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) { // if the index falls just BEFORE the swap (i.e. on 2nd comparison)\n        setTimeout(() => {\n          const currentBarColor = i % 3 === 0 ? swapColor : comparisonColor; // if the index falls on the \"swap\" value...\n          barOne.backgroundColor = otherColor;\n          for (let i = currIdx - 1; i >= 0; i--) {\n            let bar = bars[i]\n            bar.style.backgroundColor = currentBarColor;\n          }\n        }, i * convertedSpeed)\n      } else {\n        setTimeout(() => {\n          let [prevCurrIdx, prevOtherIdx] = animations[i - 3] ? animations[i - 3] : [0, 0]\n          if (currIdx !== otherIdx) {\n            let initIdx = currIdx;\n            const splice = (currIdx, startIdx, subArr) => {\n              while (currIdx > startIdx) {\n                const temp = subArr[currIdx].style.height;\n                subArr[currIdx].style.height = subArr[currIdx - 1].style.height\n                subArr[currIdx - 1].style.height = temp\n                const tempColor = subArr[currIdx].style.backgroundColor;\n                subArr[currIdx].style.backgroundColor = subArr[currIdx - 1].style.backgroundColor\n                subArr[currIdx - 1].style.backgroundColor = tempColor\n                currIdx -= 1;\n              }\n            }\n            for (otherIdx; otherIdx < currIdx; otherIdx++) {\n              if (currIdx === initIdx) {\n                splice(currIdx, otherIdx, bars)\n                initIdx = -1;\n                otherIdx -= 1;\n              }\n            }\n          }\n          if (i === animations.length - 1) bars[currIdx - 1].style.backgroundColor = comparisonColor;\n        }, i * convertedSpeed)\n      }\n    }\n    // resetColors(comparisonColor);\n  }\n\n  const selectionSortAnimate = () => {\n    const animations = selectionSort(array);\n    console.log(animations);\n    for (let i = 0; i < animations.length; i++) {\n      const bars = document.getElementsByClassName('array-bar');\n      const [barOneIdx, barTwoIdx] = animations[i];\n      const barOne = bars[barOneIdx].style;\n      const barTwo = bars[barTwoIdx].style;\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) { // if the index falls just BEFORE the swap (i.e. on 2nd comparison)\n        setTimeout(() => {\n          const currentBarColor = i % 3 === 0 ? swapColor : comparisonColor; // if the index falls on the \"swap\" value...\n          barOne.backgroundColor = currentBarColor;\n          barTwo.backgroundColor = currentBarColor;\n        }, i * convertedSpeed)\n      } else {\n        setTimeout(() => {\n          const [prevBarOneIdx, prevBarTwoIdx] = animations[i - 1];\n          if (barOneIdx !== prevBarOneIdx\n            || barTwoIdx !== prevBarTwoIdx\n            || barTwoIdx === array.length - 1\n            || i === animations.length - 1) {\n            const tempHeight = barOne.height;\n            barOne.height = barTwo.height;\n            barTwo.height = tempHeight;\n            barOne.backgroundColor = otherColor;\n          }\n        }, i * convertedSpeed)\n      }\n    }\n\n  }\n\n  const quickSortAnimate = () => {\n    const animations = quickSort(array);\n    console.log(animations)\n    for (let i = 0; i < animations.length; i++) {\n      const bars = document.getElementsByClassName('array-bar');\n      const [barOneIdx, barTwoIdx, pivotIdx] = animations[i];\n      const barOne = bars[barOneIdx].style;\n      const barTwo = bars[barTwoIdx].style;\n      const barPivot = bars[pivotIdx].style;\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) { // if the index falls just BEFORE the swap (i.e. on 2nd comparison)\n        setTimeout(() => {\n          const currentBarColor = i % 3 === 0 ? otherColor : comparisonColor; // if the index falls on the \"swap\" value...\n          barPivot.backgroundColor = swapColor;\n          barOne.backgroundColor = currentBarColor;\n          barTwo.backgroundColor = currentBarColor;\n          if (barOneIdx === pivotIdx && barTwoIdx > 0) {\n            barOne.backgroundColor = 'yellow';\n            barTwo.backgroundColor = 'yellow';\n          }\n        }, i * convertedSpeed)\n      } else {\n        setTimeout(() => {\n          if (barOneIdx !== 0 && barTwoIdx !== 0 // normal \"while\" swap\n            || i === animations.length - 1) {\n            const tempHeight = barOne.height;\n            barOne.height = barTwo.height;\n            barTwo.height = tempHeight;\n            barOne.backgroundColor = comparisonColor;\n            barTwo.backgroundColor = comparisonColor;\n          } else if (barOneIdx === pivotIdx && barTwoIdx > 0) { // special \"pivot\" swap\n            barPivot.backgroundColor = swapColor;\n            const tempHeight = barOne.height;\n            barOne.height = barTwo.height;\n            barTwo.height = tempHeight;\n            barPivot.backgroundColor = comparisonColor;\n\n          }\n          // barPivot.backgroundColor = comparisonColor;\n          barTwo.backgroundColor = comparisonColor;\n        }, i * convertedSpeed)\n      }\n    }\n  }\n\n  const animateAlgo = () => {\n    const algos = [bubbleSortAnimate, insertionSortAnimate, selectionSortAnimate, quickSortAnimate]\n    const algoIdxString = document.getElementById('sorting-options').options.selectedIndex;\n    const algoIdx = Number(algoIdxString)\n    algos[algoIdx]();\n  }\n\n  return (\n    <div className=\"algo-container\">\n      <div className=\"array-container\">\n        {array.map((value, i) => (\n          <div\n            className=\"array-bar\"\n            key={i}\n            style={{\n              height: `${value}px`,\n              backgroundColor: 'orangered',\n              width: `${90 / NUM_BARS}vh`,\n              display: 'inline-block',\n              margin: 1\n            }}\n          >\n          </div>\n        ))}\n      </div>\n      <div className=\"slidercontainer\">\n        <input onChange={handleChange}\n          type=\"range\"\n          list='tickmarks'\n          min=\"1\"\n          max=\"301\"\n          // value={SPEED}\n          // onChange={setSpeed}\n          step='60'\n          className=\"slidercontianer\"\n          id=\"my-range\"\n          name='Speed'\n        />\n\n        <label className='sliderlabel' for='myRange'>Speed</label>\n      </div>\n      <div className=\"slidercontainer\">\n        <input onChange={handleBarChange}\n          type=\"range\"\n          min=\"8\"\n          max=\"200\"\n          value={NUM_BARS}\n          className=\"slider\"\n          id=\"myBarRange\"\n          name='Length'\n        />\n        <label className='sliderlabel' for='myBarRange'>Length</label>\n      </div>\n      <div className=\"buttons\">\n        {/* <button onClick={stop}>Stop</button> */}\n        {/* <button onClick={resetColors}>Reset Colors</button> */}\n        <button onClick={resetArray}>Get New Array</button>\n        <select label='Choose an Algo' name=\"sorting-options\" id=\"sorting-options\">\n          <option label='Bubble' value='0'></option>\n          <option label='Insertion' value='1'></option>\n          <option label='Selection' value='2'></option>\n          <option label='Quick' value='3'></option>\n        </select>\n        <button onClick={animateAlgo}>Sort!</button>\n      </div>\n    </div >\n  )\n\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) * min)\n}\n\nfunction arraysEqual(array1, array2) {\n  if (array1.length !== array2.length) return false;\n  for (let i = 0; i < array1.length; i += 1) {\n    if (array1[i] !== array2[i]) {\n      console.log(array1[i], array2[i]);\n      return false;\n    }\n  }\n  return true;\n}\n\n// console.log(\"Should be TRUE:\", arraysEqual([1, 5, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 5, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 50, 4]))\n// console.log(\"Should be FALSE:\", arraysEqual([1, 0, 4], [1, 0, -1]))\n"]},"metadata":{},"sourceType":"module"}