{"ast":null,"code":"import framerize from './util';\nexport default function insertionSort(array) {\n  const animations = [];\n\n  for (let i = 1; i < array.length; i++) {\n    let j = i; // let animation = {}\n\n    animation.comparison = [j, j - 1]; // animation.swap = [0, 0];\n    // console.log(animation.swap)\n\n    animations.push({\n      comparison: [j, j - 1],\n      swap: [0, 0]\n    });\n    console.log(animations[0]);\n\n    while (j > 0 && array[j] < array[j - 1]) {\n      swap(j, j - 1, array);\n      animation.comparison = [j, j - 1];\n      animation.swap = [i, j - 1]; // animations.push(animation);\n      // animations.push({ comparison: [j, j - 1], swap: [i, j - 1] });\n\n      j -= 1;\n    }\n\n    if (!animation.swap) {\n      animation.swap = [0, 0];\n    }\n  } // console.log(animations)\n\n\n  return framerize(animations);\n}\n\nfunction swap(i, j, array) {\n  const temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/client/src/SortingViz/insertionSort.js"],"names":["framerize","insertionSort","array","animations","i","length","j","animation","comparison","push","swap","console","log","temp"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,QAAtB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAMC,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,CAAC,GAAGF,CAAR,CADqC,CAErC;;AACAG,IAAAA,SAAS,CAACC,UAAV,GAAuB,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAvB,CAHqC,CAIrC;AACA;;AACAH,IAAAA,UAAU,CAACM,IAAX,CAAgB;AAAED,MAAAA,UAAU,EAAE,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAd;AAA0BI,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAhC,KAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,UAAU,CAAC,CAAD,CAAtB;;AAEA,WAAOG,CAAC,GAAG,CAAJ,IAASJ,KAAK,CAACI,CAAD,CAAL,GAAWJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAhC,EAAyC;AACvCI,MAAAA,IAAI,CAACJ,CAAD,EAAIA,CAAC,GAAG,CAAR,EAAWJ,KAAX,CAAJ;AACAK,MAAAA,SAAS,CAACC,UAAV,GAAuB,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAvB;AACAC,MAAAA,SAAS,CAACG,IAAV,GAAiB,CAACN,CAAD,EAAIE,CAAC,GAAG,CAAR,CAAjB,CAHuC,CAIvC;AACA;;AACAA,MAAAA,CAAC,IAAI,CAAL;AAED;;AACD,QAAI,CAACC,SAAS,CAACG,IAAf,EAAqB;AACnBH,MAAAA,SAAS,CAACG,IAAV,GAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB;AACD;AACF,GAvB0C,CAwB3C;;;AACA,SAAOV,SAAS,CAACG,UAAD,CAAhB;AACD;;AAED,SAASO,IAAT,CAAcN,CAAd,EAAiBE,CAAjB,EAAoBJ,KAApB,EAA2B;AACzB,QAAMW,IAAI,GAAGX,KAAK,CAACE,CAAD,CAAlB;AACAF,EAAAA,KAAK,CAACE,CAAD,CAAL,GAAWF,KAAK,CAACI,CAAD,CAAhB;AACAJ,EAAAA,KAAK,CAACI,CAAD,CAAL,GAAWO,IAAX;AACD","sourcesContent":["import framerize from './util';\n\nexport default function insertionSort(array) {\n  const animations = [];\n  for (let i = 1; i < array.length; i++) {\n    let j = i;\n    // let animation = {}\n    animation.comparison = [j, j - 1];\n    // animation.swap = [0, 0];\n    // console.log(animation.swap)\n    animations.push({ comparison: [j, j - 1], swap: [0, 0] });\n    console.log(animations[0])\n\n    while (j > 0 && array[j] < array[j - 1]) {\n      swap(j, j - 1, array);\n      animation.comparison = [j, j - 1];\n      animation.swap = [i, j - 1];\n      // animations.push(animation);\n      // animations.push({ comparison: [j, j - 1], swap: [i, j - 1] });\n      j -= 1;\n\n    }\n    if (!animation.swap) {\n      animation.swap = [0, 0]\n    }\n  }\n  // console.log(animations)\n  return framerize(animations);\n}\n\nfunction swap(i, j, array) {\n  const temp = array[i];\n  array[i] = array[j]\n  array[j] = temp\n}\n"]},"metadata":{},"sourceType":"module"}