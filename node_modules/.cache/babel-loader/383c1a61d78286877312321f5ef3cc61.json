{"ast":null,"code":"import _slicedToArray from\"/Users/jpa/Desktop/goAlgo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import depthFirstSearch from'./depthFirstSearch';import breadthFirstSearch from'./breadthFirstSearch';import dijkstra,{getNodesInShortestPath}from'./dijkstra';import Node from'./Node/Node';import'./PathfindingViz.css';export default function PathfindingViz(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),grid=_useState2[0],setGrid=_useState2[1];var _useState3=useState(20),_useState4=_slicedToArray(_useState3,1),SPEED=_useState4[0];var mousePressed=false;var GRID_HEIGHT=Math.floor(window.innerHeight/35);var GRID_WIDTH=Math.floor(window.innerWidth/27);var finding=false;var START_NODE_ROW=Math.floor(GRID_HEIGHT/3);var START_NODE_COL=Math.floor(GRID_WIDTH/4);var END_NODE_ROW=Math.floor(GRID_HEIGHT/1.5);var END_NODE_COL=Math.floor(GRID_WIDTH/1.3);useEffect(function(){setGrid(getBlankGrid(START_NODE_ROW,START_NODE_COL,END_NODE_ROW,END_NODE_COL,GRID_WIDTH,GRID_HEIGHT));},[START_NODE_ROW,START_NODE_COL,END_NODE_ROW,END_NODE_COL,GRID_WIDTH,GRID_HEIGHT]);var handleMouseDown=function handleMouseDown(row,col){var targetNode=grid[row][col];if(row===START_NODE_ROW&&col===START_NODE_COL||row===END_NODE_ROW&&col===END_NODE_COL||finding){return;}mousePressed=true;targetNode.isWall=!targetNode.isWall;var targetDomNode=document.getElementById(\"loc-\".concat(row,\"-\").concat(col));targetNode.isWall?targetDomNode.classList.add('node-is-wall'):targetDomNode.classList.remove('node-is-wall');};var handleMouseEnter=function handleMouseEnter(row,col){var targetNode=grid[row][col];if(!mousePressed||row===START_NODE_ROW&&col===START_NODE_COL||row===END_NODE_ROW&&col===END_NODE_COL||targetNode.isWall)return;targetNode.isWall=!targetNode.isWall;var targetDomNode=document.getElementById(\"loc-\".concat(row,\"-\").concat(col));targetNode.isWall?targetDomNode.classList.add('node-is-wall'):targetDomNode.classList.remove('node-is-wall');};var handleMouseUp=function handleMouseUp(){mousePressed=false;};var depthFirstSearchAnimate=function depthFirstSearchAnimate(pathOfNodes){var _loop=function _loop(i){var interval=i*SPEED;setTimeout(function(){var currentPathNode=pathOfNodes[i];var currentDomNode=document.getElementById(\"loc-\".concat(currentPathNode.row,\"-\").concat(currentPathNode.col));currentDomNode.classList.add('node-visited');if(i===pathOfNodes.length-1){enableButtons();finding=false;}},interval);};for(var i=0;i<pathOfNodes.length;i++){_loop(i);}};var depthFirstSearchVisualize=function depthFirstSearchVisualize(){var startNode=grid[START_NODE_ROW][START_NODE_COL];var endNode=grid[END_NODE_ROW][END_NODE_COL];var pathOfNodes=depthFirstSearch(grid,startNode,endNode);depthFirstSearchAnimate(pathOfNodes);};var breadthFirstSearchAnimate=function breadthFirstSearchAnimate(pathOfNodes){var _loop2=function _loop2(i){var interval=i*SPEED;setTimeout(function(){var currentPathNode=pathOfNodes[i];var currentDomNode=document.getElementById(\"loc-\".concat(currentPathNode.row,\"-\").concat(currentPathNode.col));currentDomNode.classList.add('node-visited');if(i===pathOfNodes.length-1){enableButtons();}},interval);};for(var i=0;i<pathOfNodes.length;i++){_loop2(i);}};var breadthFirstSearchVisualize=function breadthFirstSearchVisualize(){var startNode=grid[START_NODE_ROW][START_NODE_COL];var endNode=grid[END_NODE_ROW][END_NODE_COL];var pathOfNodes=breadthFirstSearch(grid,startNode,endNode);breadthFirstSearchAnimate(pathOfNodes);};var dijkstraAnimate=function dijkstraAnimate(pathOfNodes,shortestPath){var _loop3=function _loop3(i){var interval=i*SPEED;setTimeout(function(){var currentPathNode=pathOfNodes[i];var currentDomNode=document.getElementById(\"loc-\".concat(currentPathNode.row,\"-\").concat(currentPathNode.col));currentDomNode.classList.add('node-visited');if(i===pathOfNodes.length-1){var _loop4=function _loop4(j){var newInterval=j*SPEED;setTimeout(function(){var currentShortNode=shortestPath[j];var currentShortDomNode=document.getElementById(\"loc-\".concat(currentShortNode.row,\"-\").concat(currentShortNode.col));currentShortDomNode.classList.add('node-short-visited');if(i===pathOfNodes.length-1&&j===shortestPath.length-1){enableButtons();}},newInterval);};for(var j=0;j<shortestPath.length;j++){_loop4(j);}}},interval);};for(var i=0;i<pathOfNodes.length;i++){_loop3(i);}};var dijkstraVisualize=function dijkstraVisualize(){var startNode=grid[START_NODE_ROW][START_NODE_COL];var endNode=grid[END_NODE_ROW][END_NODE_COL];var visitiedNodesInOrder=dijkstra(grid,startNode,endNode);var shortestPath=getNodesInShortestPath(endNode);dijkstraAnimate(visitiedNodesInOrder,shortestPath);};var resetGrid=function resetGrid(){grid.forEach(function(row){return row.forEach(function(node){var currentDomNode=document.getElementById(\"loc-\".concat(node.row,\"-\").concat(node.col));currentDomNode.classList.remove('node-visited','node-is-wall','node-short-visited');});});setGrid([]);setGrid(getBlankGrid(START_NODE_ROW,START_NODE_COL,END_NODE_ROW,END_NODE_COL,GRID_WIDTH,GRID_HEIGHT));};var resetPath=function resetPath(){grid.forEach(function(row){return row.forEach(function(node){var currentDomNode=document.getElementById(\"loc-\".concat(node.row,\"-\").concat(node.col));currentDomNode.classList.remove('node-visited','node-short-visited');// currentDomNode.className.includes('node-is-wall') ? node.isWall = true : node.isWall = false;\nnode.isVisited=false;});});// setGrid(grid)\n// setGrid(getBlankGrid(START_NODE_ROW, START_NODE_COL, END_NODE_ROW, END_NODE_COL, GRID_WIDTH, GRID_HEIGHT));\n};var animateAlgo=function animateAlgo(){resetPath();finding=true;var findingButtons=document.getElementsByClassName('disable');Array.from(findingButtons).forEach(function(button){return button.disabled=true;});var algos=[depthFirstSearchVisualize,breadthFirstSearchVisualize,dijkstraVisualize];var algoIdxString=document.getElementById('pathfinding-options').options.selectedIndex;var algoIdx=Number(algoIdxString);algos[algoIdx]();};function enableButtons(){var findingButtons=document.getElementsByClassName('disable');Array.from(findingButtons).forEach(function(button){return button.disabled=false;});finding=false;// enables ability to add walls\n}return/*#__PURE__*/React.createElement(\"div\",{id:\"grid-container\"},/*#__PURE__*/React.createElement(\"div\",{id:\"grid-controls\"},/*#__PURE__*/React.createElement(\"select\",{className:\"disable\",label:\"Choose an Algo\",name:\"pathfinding-options\",id:\"pathfinding-options\"},/*#__PURE__*/React.createElement(\"option\",{label:\"Depth First Search\",value:\"0\"}),/*#__PURE__*/React.createElement(\"option\",{label:\"Breadth First Search\",value:\"1\"}),/*#__PURE__*/React.createElement(\"option\",{label:\"Dijkstra\",value:\"2\"})),/*#__PURE__*/React.createElement(\"button\",{className:\"disable\",onClick:animateAlgo},\"Search!\"),/*#__PURE__*/React.createElement(\"button\",{className:\"disable\",onClick:resetGrid},\"Reset Grid\")),getInitialDomGrid(grid,handleMouseDown,handleMouseEnter,handleMouseUp));}function getBlankGrid(startRow,startCol,endRow,endCol,gridWidth,gridHeight){var grid=[];for(var row=0;row<gridHeight;row++){var currentRow=[];for(var col=0;col<gridWidth;col++){var currentNode={col:col,row:row,isStart:row===startRow&&col===startCol,isFinish:row===endRow&&col===endCol,distance:Infinity,isVisited:false,isWall:false,previousNode:null};currentRow.push(currentNode);}grid.push(currentRow);}return grid;}function getInitialDomGrid(grid,handleMouseDown,handleMouseEnter,handleMouseUp){return/*#__PURE__*/React.createElement(\"div\",{className:\"grid\"},grid.map(function(row,rowIdx){return/*#__PURE__*/React.createElement(\"div\",{key:rowIdx,className:\"grid-row\"},row.map(function(node){var isStart=node.isStart,isFinish=node.isFinish,isVisited=node.isVisited,col=node.col,row=node.row,isWall=node.isWall;return/*#__PURE__*/React.createElement(Node,{isStart:isStart,isFinish:isFinish,key:col+'-'+row,location:row+'-'+col,test:'hello there',isVisited:isVisited,row:row,col:col,onMouseDown:handleMouseDown,onMouseEnter:handleMouseEnter,onMouseUp:handleMouseUp,isWall:isWall});}));}));}","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/src/PathfindingViz/PathfindingViz.js"],"names":["React","useState","useEffect","depthFirstSearch","breadthFirstSearch","dijkstra","getNodesInShortestPath","Node","PathfindingViz","grid","setGrid","SPEED","mousePressed","GRID_HEIGHT","Math","floor","window","innerHeight","GRID_WIDTH","innerWidth","finding","START_NODE_ROW","START_NODE_COL","END_NODE_ROW","END_NODE_COL","getBlankGrid","handleMouseDown","row","col","targetNode","isWall","targetDomNode","document","getElementById","classList","add","remove","handleMouseEnter","handleMouseUp","depthFirstSearchAnimate","pathOfNodes","i","interval","setTimeout","currentPathNode","currentDomNode","length","enableButtons","depthFirstSearchVisualize","startNode","endNode","breadthFirstSearchAnimate","breadthFirstSearchVisualize","dijkstraAnimate","shortestPath","j","newInterval","currentShortNode","currentShortDomNode","dijkstraVisualize","visitiedNodesInOrder","resetGrid","forEach","node","resetPath","isVisited","animateAlgo","findingButtons","getElementsByClassName","Array","from","button","disabled","algos","algoIdxString","options","selectedIndex","algoIdx","Number","getInitialDomGrid","startRow","startCol","endRow","endCol","gridWidth","gridHeight","currentRow","currentNode","isStart","isFinish","distance","Infinity","previousNode","push","map","rowIdx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport depthFirstSearch from './depthFirstSearch';\nimport breadthFirstSearch from './breadthFirstSearch';\nimport dijkstra, { getNodesInShortestPath } from './dijkstra';\nimport Node from './Node/Node';\n\nimport './PathfindingViz.css';\n\nexport default function PathfindingViz() {\n  let [grid, setGrid] = useState([]);\n  const [SPEED] = useState(20);\n  let mousePressed = false;\n  const GRID_HEIGHT = Math.floor(window.innerHeight / 35);\n  const GRID_WIDTH = Math.floor(window.innerWidth / 27);\n  let finding = false;\n\n  const START_NODE_ROW = Math.floor(GRID_HEIGHT / 3);\n  const START_NODE_COL = Math.floor(GRID_WIDTH / 4);\n  const END_NODE_ROW = Math.floor(GRID_HEIGHT / 1.5);\n  const END_NODE_COL = Math.floor(GRID_WIDTH / 1.3);\n\n\n  useEffect(() => {\n    setGrid(getBlankGrid(\n      START_NODE_ROW,\n      START_NODE_COL,\n      END_NODE_ROW,\n      END_NODE_COL,\n      GRID_WIDTH,\n      GRID_HEIGHT));\n  }, [START_NODE_ROW,\n    START_NODE_COL,\n    END_NODE_ROW,\n    END_NODE_COL,\n    GRID_WIDTH,\n    GRID_HEIGHT])\n\n  const handleMouseDown = (row, col) => {\n    const targetNode = grid[row][col];\n    if ((row === START_NODE_ROW && col === START_NODE_COL)\n      || (row === END_NODE_ROW && col === END_NODE_COL)\n      || finding) {\n      return;\n    }\n    mousePressed = true;\n    targetNode.isWall = !targetNode.isWall;\n    const targetDomNode = document.getElementById(`loc-${row}-${col}`);\n    targetNode.isWall ? targetDomNode.classList.add('node-is-wall') : targetDomNode.classList.remove('node-is-wall');\n  }\n  const handleMouseEnter = (row, col) => {\n    const targetNode = grid[row][col];\n    if (!mousePressed\n      || (row === START_NODE_ROW && col === START_NODE_COL)\n      || (row === END_NODE_ROW && col === END_NODE_COL)\n      || targetNode.isWall) return;\n    targetNode.isWall = !targetNode.isWall;\n    const targetDomNode = document.getElementById(`loc-${row}-${col}`);\n    targetNode.isWall ? targetDomNode.classList.add('node-is-wall') : targetDomNode.classList.remove('node-is-wall');\n  }\n  const handleMouseUp = () => {\n    mousePressed = false;\n  }\n  const depthFirstSearchAnimate = (pathOfNodes) => {\n    for (let i = 0; i < pathOfNodes.length; i++) {\n      const interval = i * SPEED;\n      setTimeout(() => {\n        const currentPathNode = pathOfNodes[i];\n        const currentDomNode = document.getElementById(`loc-${currentPathNode.row}-${currentPathNode.col}`);\n        currentDomNode.classList.add('node-visited');\n        if (i === pathOfNodes.length - 1) {\n          enableButtons();\n          finding = false;\n        }\n      }, interval)\n    }\n  }\n\n  const depthFirstSearchVisualize = () => {\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\n    const endNode = grid[END_NODE_ROW][END_NODE_COL];\n    const pathOfNodes = depthFirstSearch(grid, startNode, endNode);\n    depthFirstSearchAnimate(pathOfNodes)\n  }\n\n  const breadthFirstSearchAnimate = (pathOfNodes) => {\n    for (let i = 0; i < pathOfNodes.length; i++) {\n      const interval = i * SPEED;\n      setTimeout(() => {\n        const currentPathNode = pathOfNodes[i];\n        const currentDomNode = document.getElementById(`loc-${currentPathNode.row}-${currentPathNode.col}`)\n        currentDomNode.classList.add('node-visited');\n        if (i === pathOfNodes.length - 1) {\n          enableButtons();\n        }\n      }, interval)\n    }\n  }\n\n  const breadthFirstSearchVisualize = () => {\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\n    const endNode = grid[END_NODE_ROW][END_NODE_COL];\n    const pathOfNodes = breadthFirstSearch(grid, startNode, endNode);\n    breadthFirstSearchAnimate(pathOfNodes)\n  }\n\n\n  const dijkstraAnimate = (pathOfNodes, shortestPath) => {\n    for (let i = 0; i < pathOfNodes.length; i++) {\n      const interval = i * SPEED;\n      setTimeout(() => {\n        const currentPathNode = pathOfNodes[i];\n        const currentDomNode = document.getElementById(`loc-${currentPathNode.row}-${currentPathNode.col}`)\n        currentDomNode.classList.add('node-visited');\n        if (i === pathOfNodes.length - 1) {\n          for (let j = 0; j < shortestPath.length; j++) {\n            const newInterval = j * SPEED;\n            setTimeout(() => {\n              const currentShortNode = shortestPath[j];\n              const currentShortDomNode = document.getElementById(`loc-${currentShortNode.row}-${currentShortNode.col}`);\n              currentShortDomNode.classList.add('node-short-visited');\n              if (i === pathOfNodes.length - 1 && j === shortestPath.length - 1) {\n                enableButtons();\n              }\n            }, newInterval);\n          }\n        }\n      }, interval)\n    }\n  }\n\n  const dijkstraVisualize = () => {\n    const startNode = grid[START_NODE_ROW][START_NODE_COL];\n    const endNode = grid[END_NODE_ROW][END_NODE_COL];\n    const visitiedNodesInOrder = dijkstra(grid, startNode, endNode);\n    const shortestPath = getNodesInShortestPath(endNode)\n    dijkstraAnimate(visitiedNodesInOrder, shortestPath)\n  }\n\n  const resetGrid = () => {\n    grid.forEach(row => row.forEach(node => {\n      const currentDomNode = document.getElementById(`loc-${node.row}-${node.col}`)\n      currentDomNode.classList.remove('node-visited', 'node-is-wall', 'node-short-visited')\n    }))\n    setGrid([])\n    setGrid(getBlankGrid(START_NODE_ROW, START_NODE_COL, END_NODE_ROW, END_NODE_COL, GRID_WIDTH, GRID_HEIGHT));\n  }\n\n  const resetPath = () => {\n    grid.forEach(row => row.forEach(node => {\n      const currentDomNode = document.getElementById(`loc-${node.row}-${node.col}`);\n      currentDomNode.classList.remove('node-visited', 'node-short-visited');\n      // currentDomNode.className.includes('node-is-wall') ? node.isWall = true : node.isWall = false;\n      node.isVisited = false;\n    }))\n    // setGrid(grid)\n    // setGrid(getBlankGrid(START_NODE_ROW, START_NODE_COL, END_NODE_ROW, END_NODE_COL, GRID_WIDTH, GRID_HEIGHT));\n  }\n\n  const animateAlgo = () => {\n    resetPath();\n    finding = true;\n    const findingButtons = document.getElementsByClassName('disable');\n    Array.from(findingButtons).forEach(button => button.disabled = true);\n    const algos = [depthFirstSearchVisualize, breadthFirstSearchVisualize, dijkstraVisualize]\n    const algoIdxString = document.getElementById('pathfinding-options').options.selectedIndex;\n    const algoIdx = Number(algoIdxString)\n    algos[algoIdx]();\n  }\n\n  function enableButtons() {\n    const findingButtons = document.getElementsByClassName('disable');\n    Array.from(findingButtons).forEach(button => button.disabled = false);\n    finding = false; // enables ability to add walls\n  }\n\n  return (\n    <div id='grid-container'>\n      <div id='grid-controls'>\n        <select className='disable' label='Choose an Algo' name=\"pathfinding-options\" id=\"pathfinding-options\">\n          <option label='Depth First Search' value='0'></option>\n          <option label='Breadth First Search' value='1'></option>\n          <option label='Dijkstra' value='2'></option>\n        </select>\n        <button className='disable' onClick={animateAlgo}>Search!</button>\n        <button className='disable' onClick={resetGrid}>Reset Grid</button>\n\n      </div>\n      {getInitialDomGrid(grid, handleMouseDown, handleMouseEnter, handleMouseUp)}\n    </div>\n  );\n}\n\n\nfunction getBlankGrid(startRow, startCol, endRow, endCol, gridWidth, gridHeight) {\n  const grid = [];\n  for (let row = 0; row < gridHeight; row++) {\n    const currentRow = [];\n    for (let col = 0; col < gridWidth; col++) {\n      const currentNode = {\n        col,\n        row,\n        isStart: row === startRow && col === startCol,\n        isFinish: row === endRow && col === endCol,\n        distance: Infinity,\n        isVisited: false,\n        isWall: false,\n        previousNode: null\n      };\n      currentRow.push(currentNode);\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n}\n\nfunction getInitialDomGrid(grid, handleMouseDown, handleMouseEnter, handleMouseUp) {\n  return (\n    <div className='grid'>\n      {grid.map((row, rowIdx) => {\n        return (\n          <div key={rowIdx} className='grid-row'>\n            {row.map((node) => {\n              const { isStart, isFinish, isVisited, col, row, isWall } = node;\n              return (\n                <Node\n                  isStart={isStart}\n                  isFinish={isFinish}\n                  key={col + '-' + row}\n                  location={row + '-' + col}\n                  test={'hello there'}\n                  isVisited={isVisited}\n                  row={row}\n                  col={col}\n                  onMouseDown={handleMouseDown}\n                  onMouseEnter={handleMouseEnter}\n                  onMouseUp={handleMouseUp}\n                  isWall={isWall}\n                ></Node>\n              );\n            })}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}