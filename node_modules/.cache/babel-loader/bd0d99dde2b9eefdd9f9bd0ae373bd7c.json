{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/jpa/Desktop/goAlgo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/Users/jpa/Desktop/goAlgo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import bubbleSort from'./bubbleSort';import insertionSort from'./insertionSort';import selectionSort from'./selectionSort';import quickSort from'./quickSort';import'./SortingViz.css';export default function SortingViz(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),array=_useState2[0],setArray=_useState2[1];var _useState3=useState(20),_useState4=_slicedToArray(_useState3,2),NUM_BARS=_useState4[0],SET_NUM_BARS=_useState4[1];var handleBarChange=function handleBarChange(e){NUM_BARS=e.target.value;SET_NUM_BARS(NUM_BARS);resetArray();resetColors();};var _useState5=useState(200),_useState6=_slicedToArray(_useState5,2),SPEED=_useState6[0],setSpeed=_useState6[1];var handleChange=function handleChange(e){SPEED=e.target.value;setSpeed(SPEED);};var convertedSpeed=SPEED>=100&&SPEED<300?400-SPEED-30:SPEED>=300&&SPEED<350?400-SPEED-94:SPEED>=350&&SPEED<400?400-SPEED-48:400-SPEED;var comparisonColor='green';var swapColor='white';var otherColor='orange';var maxBarHeight=Math.floor(window.screen.availHeight/10);var resetColors=function resetColors(color){var bars=document.getElementsByClassName('array-bar');var _iterator=_createForOfIteratorHelper(bars),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var bar=_step.value;bar.style.backgroundColor=color;}}catch(err){_iterator.e(err);}finally{_iterator.f();}};var resetArray=function resetArray(){var array=[];for(var i=0;i<NUM_BARS;i+=1){array.push(randomInt(5,maxBarHeight));}setArray(array);};useEffect(function(){resetArray();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);var bubbleSortAnimate=function bubbleSortAnimate(){var animations=bubbleSort(array);var _loop=function _loop(i){var bars=document.getElementsByClassName('array-bar');var _animations$i=_slicedToArray(animations[i],2),barOneIdx=_animations$i[0],barTwoIdx=_animations$i[1];var barOne=bars[barOneIdx].style;var barTwo=bars[barTwoIdx].style;var isColorChange=i%3!==2;if(isColorChange){// if the index falls just BEFORE the swap (i.e. on 2nd comparison)\nsetTimeout(function(){var currentBarColor=i%3===0?swapColor:comparisonColor;barOne.backgroundColor=currentBarColor;barTwo.backgroundColor=currentBarColor;},i*convertedSpeed);}else{setTimeout(function(){if(i===animations.length-1)enableButtons();if(barOneIdx>barTwoIdx){var tempHeight=barOne.height;barOne.height=barTwo.height;barTwo.height=tempHeight;barOne.backgroundColor=otherColor;if(barOneIdx===bars.length-1){resetColors('green');}}},i*convertedSpeed);}};for(var i=0;i<animations.length;i++){_loop(i);}};var insertionSortAnimate=function insertionSortAnimate(){var animations=insertionSort(array);var bars=document.getElementsByClassName('array-bar');var _loop2=function _loop2(i){var _animations$i2=_slicedToArray(animations[i],2),currIdx=_animations$i2[0],otherIdx=_animations$i2[1];var barOne=bars[currIdx].style;var isColorChange=i%3!==2;if(isColorChange){// if the index falls just BEFORE the swap (i.e. on 2nd comparison)\nsetTimeout(function(){var currentBarColor=i%3===0?swapColor:comparisonColor;// if the index falls on the \"swap\" value...\nbarOne.backgroundColor=otherColor;for(var _i=currIdx-1;_i>=0;_i--){var bar=bars[_i];bar.style.backgroundColor=currentBarColor;}},i*convertedSpeed);}else{setTimeout(function(){if(i===animations.length-1)enableButtons();if(currIdx!==otherIdx){var initIdx=currIdx;var splice=function splice(currIdx,startIdx,subArr){while(currIdx>startIdx){var temp=subArr[currIdx].style.height;subArr[currIdx].style.height=subArr[currIdx-1].style.height;subArr[currIdx-1].style.height=temp;var tempColor=subArr[currIdx].style.backgroundColor;subArr[currIdx].style.backgroundColor=subArr[currIdx-1].style.backgroundColor;subArr[currIdx-1].style.backgroundColor=tempColor;currIdx-=1;}};for(otherIdx;otherIdx<currIdx;otherIdx++){if(currIdx===initIdx){splice(currIdx,otherIdx,bars);initIdx=-1;otherIdx-=1;}}}if(i===animations.length-1)bars[currIdx-1].style.backgroundColor=comparisonColor;},i*convertedSpeed);}};for(var i=0;i<animations.length;i++){_loop2(i);}};var selectionSortAnimate=function selectionSortAnimate(){var animations=selectionSort(array);var _loop3=function _loop3(i){var bars=document.getElementsByClassName('array-bar');var _animations$i3=_slicedToArray(animations[i],2),barOneIdx=_animations$i3[0],barTwoIdx=_animations$i3[1];var barOne=bars[barOneIdx].style;var barTwo=bars[barTwoIdx].style;var isColorChange=i%3!==2;if(isColorChange){// if the index falls just BEFORE the swap (i.e. on 2nd comparison)\nsetTimeout(function(){var currentBarColor=i%3===0?swapColor:comparisonColor;// if the index falls on the \"swap\" value...\nbarOne.backgroundColor=currentBarColor;barTwo.backgroundColor=currentBarColor;},i*convertedSpeed);}else{setTimeout(function(){if(i===animations.length-1)enableButtons();var _animations=_slicedToArray(animations[i-1],2),prevBarOneIdx=_animations[0],prevBarTwoIdx=_animations[1];if(barOneIdx!==prevBarOneIdx||barTwoIdx!==prevBarTwoIdx||barTwoIdx===array.length-1||i===animations.length-1){var tempHeight=barOne.height;barOne.height=barTwo.height;barTwo.height=tempHeight;barOne.backgroundColor=otherColor;}if(i===animations.length-1)resetColors('green');},i*convertedSpeed);}};for(var i=0;i<animations.length;i++){_loop3(i);}};var quickSortAnimate=function quickSortAnimate(){var animations=quickSort(array);var _loop4=function _loop4(i){var bars=document.getElementsByClassName('array-bar');var _animations$i4=_slicedToArray(animations[i],3),barOneIdx=_animations$i4[0],barTwoIdx=_animations$i4[1],pivotIdx=_animations$i4[2];var barOne=bars[barOneIdx].style;var barTwo=bars[barTwoIdx].style;var barPivot=bars[pivotIdx].style;var isColorChange=i%3!==2;if(isColorChange){// if the index falls just BEFORE the swap (i.e. on 2nd comparison)\nsetTimeout(function(){var currentBarColor=i%3===0?otherColor:comparisonColor;// if the index falls on the \"swap\" value...\nbarPivot.backgroundColor=swapColor;barOne.backgroundColor=currentBarColor;barTwo.backgroundColor=currentBarColor;if(barOneIdx===pivotIdx&&barTwoIdx>0){barOne.backgroundColor='yellow';barTwo.backgroundColor='yellow';}},i*convertedSpeed);}else{setTimeout(function(){if(i===animations.length-1)enableButtons();if(barOneIdx!==0&&barTwoIdx!==0||// normal \"while\" swap\ni===animations.length-1){var tempHeight=barOne.height;barOne.height=barTwo.height;barTwo.height=tempHeight;barOne.backgroundColor=comparisonColor;barTwo.backgroundColor=comparisonColor;}else if(barOneIdx===pivotIdx&&barTwoIdx>0){// special \"pivot\" swap\nbarPivot.backgroundColor=swapColor;var _tempHeight=barOne.height;barOne.height=barTwo.height;barTwo.height=_tempHeight;barPivot.backgroundColor=comparisonColor;}barTwo.backgroundColor=comparisonColor;},i*convertedSpeed);}};for(var i=0;i<animations.length;i++){_loop4(i);}};var animateAlgo=function animateAlgo(){var sortButtons=document.getElementsByClassName('disable');Array.from(sortButtons).forEach(function(button){return button.disabled=true;});var algos=[bubbleSortAnimate,insertionSortAnimate,selectionSortAnimate,quickSortAnimate];var algoIdxString=document.getElementById('sorting-options').options.selectedIndex;var algoIdx=Number(algoIdxString);algos[algoIdx]();};function enableButtons(){var sortButtons=document.getElementsByClassName('disable');Array.from(sortButtons).forEach(function(button){return button.disabled=false;});}return/*#__PURE__*/React.createElement(\"div\",{className:\"algo-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"array-container\"},array.map(function(value,i){return/*#__PURE__*/React.createElement(\"div\",{className:\"array-bar\",key:i,style:{height:\"\".concat(value/11,\"vh\"),backgroundColor:'orangered',width:\"\".concat(90/NUM_BARS,\"vh\"),display:'inline-block',margin:1,borderRadius:'10px'}});})),/*#__PURE__*/React.createElement(\"div\",{className:\"controls-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"slidercontainer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"slideritem\"},/*#__PURE__*/React.createElement(\"input\",{onChange:handleChange,type:\"range\",min:\"200\",max:\"400\",step:\"50\",className:\"slidercontianer disable\",id:\"my-range\",name:\"Speed\"}),/*#__PURE__*/React.createElement(\"label\",{className:\"sliderlabel\",htmlFor:\"my-range\"},\"Speed\")),/*#__PURE__*/React.createElement(\"div\",{className:\"slideritem\"},/*#__PURE__*/React.createElement(\"input\",{onChange:handleBarChange,type:\"range\",min:\"8\",max:\"200\",value:NUM_BARS,className:\"slider disable\",id:\"myBarRange\",name:\"Length\"}),/*#__PURE__*/React.createElement(\"label\",{className:\"sliderlabel\",htmlFor:\"myBarRange\"},\"Length\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons\"},/*#__PURE__*/React.createElement(\"select\",{className:\"disable\",label:\"Choose an Algo\",name:\"sorting-options\",id:\"sorting-options\"},/*#__PURE__*/React.createElement(\"option\",{label:\"Bubble\",value:\"0\"}),/*#__PURE__*/React.createElement(\"option\",{label:\"Insertion\",value:\"1\"}),/*#__PURE__*/React.createElement(\"option\",{label:\"Selection\",value:\"2\"}),/*#__PURE__*/React.createElement(\"option\",{label:\"Quick\",value:\"3\"})),/*#__PURE__*/React.createElement(\"button\",{className:\"disable\",onClick:animateAlgo},\"Sort!\"),/*#__PURE__*/React.createElement(\"button\",{className:\"disable\",onClick:function onClick(){resetArray();resetColors('orangered');}},\"Reset\"))));}function randomInt(min,max){return Math.floor(Math.random()*(max-min+1)*min);}","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/src/SortingViz/SortingViz.js"],"names":["React","useState","useEffect","bubbleSort","insertionSort","selectionSort","quickSort","SortingViz","array","setArray","NUM_BARS","SET_NUM_BARS","handleBarChange","e","target","value","resetArray","resetColors","SPEED","setSpeed","handleChange","convertedSpeed","comparisonColor","swapColor","otherColor","maxBarHeight","Math","floor","window","screen","availHeight","color","bars","document","getElementsByClassName","bar","style","backgroundColor","i","push","randomInt","bubbleSortAnimate","animations","barOneIdx","barTwoIdx","barOne","barTwo","isColorChange","setTimeout","currentBarColor","length","enableButtons","tempHeight","height","insertionSortAnimate","currIdx","otherIdx","initIdx","splice","startIdx","subArr","temp","tempColor","selectionSortAnimate","prevBarOneIdx","prevBarTwoIdx","quickSortAnimate","pivotIdx","barPivot","animateAlgo","sortButtons","Array","from","forEach","button","disabled","algos","algoIdxString","getElementById","options","selectedIndex","algoIdx","Number","map","width","display","margin","borderRadius","min","max","random"],"mappings":"wTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAO,kBAAP,CAEA,cAAe,SAASC,CAAAA,UAAT,EAAsB,eACTN,QAAQ,CAAC,EAAD,CADC,wCAC5BO,KAD4B,eACrBC,QADqB,8BAEJR,QAAQ,CAAC,EAAD,CAFJ,yCAE9BS,QAF8B,eAEpBC,YAFoB,eAGnC,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAO,CAC7BH,QAAQ,CAAGG,CAAC,CAACC,MAAF,CAASC,KAApB,CACAJ,YAAY,CAACD,QAAD,CAAZ,CACAM,UAAU,GACVC,WAAW,GACZ,CALD,CAHmC,eAUXhB,QAAQ,CAAC,GAAD,CAVG,yCAU9BiB,KAV8B,eAUvBC,QAVuB,eAWnC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACP,CAAD,CAAO,CAC1BK,KAAK,CAAGL,CAAC,CAACC,MAAF,CAASC,KAAjB,CACAI,QAAQ,CAACD,KAAD,CAAR,CACD,CAHD,CAIA,GAAIG,CAAAA,cAAc,CAAGH,KAAK,EAAI,GAAT,EAAgBA,KAAK,CAAG,GAAxB,CACjB,IAAMA,KAAN,CAAc,EADG,CAEjBA,KAAK,EAAI,GAAT,EAAgBA,KAAK,CAAG,GAAxB,CACE,IAAMA,KAAN,CAAc,EADhB,CAEEA,KAAK,EAAI,GAAT,EAAgBA,KAAK,CAAG,GAAxB,CACE,IAAMA,KAAN,CAAc,EADhB,CAEE,IAAMA,KANd,CAQA,GAAII,CAAAA,eAAe,CAAG,OAAtB,CACA,GAAIC,CAAAA,SAAS,CAAG,OAAhB,CACA,GAAIC,CAAAA,UAAU,CAAG,QAAjB,CAEA,GAAMC,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,MAAP,CAAcC,WAAd,CAA4B,EAAvC,CAArB,CAEA,GAAMb,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACc,KAAD,CAAW,CAC7B,GAAMC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAb,CAD6B,yCAEXF,IAFW,YAE7B,+CAAwB,IAAbG,CAAAA,GAAa,aACtBA,GAAG,CAACC,KAAJ,CAAUC,eAAV,CAA4BN,KAA5B,CACD,CAJ4B,qDAK9B,CALD,CAMA,GAAMf,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvB,GAAMR,CAAAA,KAAK,CAAG,EAAd,CACA,IAAK,GAAI8B,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG5B,QAApB,CAA8B4B,CAAC,EAAI,CAAnC,CAAsC,CACpC9B,KAAK,CAAC+B,IAAN,CAAWC,SAAS,CAAC,CAAD,CAAIf,YAAJ,CAApB,EACD,CACDhB,QAAQ,CAACD,KAAD,CAAR,CACD,CAND,CAUAN,SAAS,CAAC,UAAM,CACdc,UAAU,GACV;AACD,CAHQ,CAGN,EAHM,CAAT,CAKA,GAAMyB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B,GAAMC,CAAAA,UAAU,CAAGvC,UAAU,CAACK,KAAD,CAA7B,CAD8B,yBAErB8B,CAFqB,EAG5B,GAAMN,CAAAA,IAAI,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAb,CAH4B,iCAIGQ,UAAU,CAACJ,CAAD,CAJb,IAIrBK,SAJqB,kBAIVC,SAJU,kBAK5B,GAAMC,CAAAA,MAAM,CAAGb,IAAI,CAACW,SAAD,CAAJ,CAAgBP,KAA/B,CACA,GAAMU,CAAAA,MAAM,CAAGd,IAAI,CAACY,SAAD,CAAJ,CAAgBR,KAA/B,CACA,GAAMW,CAAAA,aAAa,CAAGT,CAAC,CAAG,CAAJ,GAAU,CAAhC,CACA,GAAIS,aAAJ,CAAmB,CAAE;AACnBC,UAAU,CAAC,UAAM,CACf,GAAMC,CAAAA,eAAe,CAAGX,CAAC,CAAG,CAAJ,GAAU,CAAV,CAAcf,SAAd,CAA0BD,eAAlD,CACAuB,MAAM,CAACR,eAAP,CAAyBY,eAAzB,CACAH,MAAM,CAACT,eAAP,CAAyBY,eAAzB,CACD,CAJS,CAIPX,CAAC,CAAGjB,cAJG,CAAV,CAKD,CAND,IAMO,CACL2B,UAAU,CAAC,UAAM,CACf,GAAIV,CAAC,GAAKI,UAAU,CAACQ,MAAX,CAAoB,CAA9B,CAAiCC,aAAa,GAC9C,GAAIR,SAAS,CAAGC,SAAhB,CAA2B,CACzB,GAAMQ,CAAAA,UAAU,CAAGP,MAAM,CAACQ,MAA1B,CACAR,MAAM,CAACQ,MAAP,CAAgBP,MAAM,CAACO,MAAvB,CACAP,MAAM,CAACO,MAAP,CAAgBD,UAAhB,CACAP,MAAM,CAACR,eAAP,CAAyBb,UAAzB,CACA,GAAImB,SAAS,GAAKX,IAAI,CAACkB,MAAL,CAAc,CAAhC,CAAmC,CACjCjC,WAAW,CAAC,OAAD,CAAX,CACD,CACF,CACF,CAXS,CAWPqB,CAAC,CAAGjB,cAXG,CAAV,CAYD,CA3B2B,EAE9B,IAAK,GAAIiB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGI,UAAU,CAACQ,MAA/B,CAAuCZ,CAAC,EAAxC,CAA4C,OAAnCA,CAAmC,EA0B3C,CACF,CA7BD,CA+BA,GAAMgB,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAMZ,CAAAA,UAAU,CAAGtC,aAAa,CAACI,KAAD,CAAhC,CACA,GAAMwB,CAAAA,IAAI,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAb,CAFiC,2BAGxBI,CAHwB,oCAILI,UAAU,CAACJ,CAAD,CAJL,IAI1BiB,OAJ0B,mBAIjBC,QAJiB,mBAK/B,GAAMX,CAAAA,MAAM,CAAGb,IAAI,CAACuB,OAAD,CAAJ,CAAcnB,KAA7B,CACA,GAAMW,CAAAA,aAAa,CAAGT,CAAC,CAAG,CAAJ,GAAU,CAAhC,CACA,GAAIS,aAAJ,CAAmB,CAAE;AACnBC,UAAU,CAAC,UAAM,CACf,GAAMC,CAAAA,eAAe,CAAGX,CAAC,CAAG,CAAJ,GAAU,CAAV,CAAcf,SAAd,CAA0BD,eAAlD,CAAmE;AACnEuB,MAAM,CAACR,eAAP,CAAyBb,UAAzB,CACA,IAAK,GAAIc,CAAAA,EAAC,CAAGiB,OAAO,CAAG,CAAvB,CAA0BjB,EAAC,EAAI,CAA/B,CAAkCA,EAAC,EAAnC,CAAuC,CACrC,GAAIH,CAAAA,GAAG,CAAGH,IAAI,CAACM,EAAD,CAAd,CACAH,GAAG,CAACC,KAAJ,CAAUC,eAAV,CAA4BY,eAA5B,CACD,CACF,CAPS,CAOPX,CAAC,CAAGjB,cAPG,CAAV,CAQD,CATD,IASO,CACL2B,UAAU,CAAC,UAAM,CACf,GAAIV,CAAC,GAAKI,UAAU,CAACQ,MAAX,CAAoB,CAA9B,CAAiCC,aAAa,GAC9C,GAAII,OAAO,GAAKC,QAAhB,CAA0B,CACxB,GAAIC,CAAAA,OAAO,CAAGF,OAAd,CACA,GAAMG,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACH,OAAD,CAAUI,QAAV,CAAoBC,MAApB,CAA+B,CAC5C,MAAOL,OAAO,CAAGI,QAAjB,CAA2B,CACzB,GAAME,CAAAA,IAAI,CAAGD,MAAM,CAACL,OAAD,CAAN,CAAgBnB,KAAhB,CAAsBiB,MAAnC,CACAO,MAAM,CAACL,OAAD,CAAN,CAAgBnB,KAAhB,CAAsBiB,MAAtB,CAA+BO,MAAM,CAACL,OAAO,CAAG,CAAX,CAAN,CAAoBnB,KAApB,CAA0BiB,MAAzD,CACAO,MAAM,CAACL,OAAO,CAAG,CAAX,CAAN,CAAoBnB,KAApB,CAA0BiB,MAA1B,CAAmCQ,IAAnC,CACA,GAAMC,CAAAA,SAAS,CAAGF,MAAM,CAACL,OAAD,CAAN,CAAgBnB,KAAhB,CAAsBC,eAAxC,CACAuB,MAAM,CAACL,OAAD,CAAN,CAAgBnB,KAAhB,CAAsBC,eAAtB,CAAwCuB,MAAM,CAACL,OAAO,CAAG,CAAX,CAAN,CAAoBnB,KAApB,CAA0BC,eAAlE,CACAuB,MAAM,CAACL,OAAO,CAAG,CAAX,CAAN,CAAoBnB,KAApB,CAA0BC,eAA1B,CAA4CyB,SAA5C,CACAP,OAAO,EAAI,CAAX,CACD,CACF,CAVD,CAWA,IAAKC,QAAL,CAAeA,QAAQ,CAAGD,OAA1B,CAAmCC,QAAQ,EAA3C,CAA+C,CAC7C,GAAID,OAAO,GAAKE,OAAhB,CAAyB,CACvBC,MAAM,CAACH,OAAD,CAAUC,QAAV,CAAoBxB,IAApB,CAAN,CACAyB,OAAO,CAAG,CAAC,CAAX,CACAD,QAAQ,EAAI,CAAZ,CACD,CACF,CACF,CACD,GAAIlB,CAAC,GAAKI,UAAU,CAACQ,MAAX,CAAoB,CAA9B,CAAiClB,IAAI,CAACuB,OAAO,CAAG,CAAX,CAAJ,CAAkBnB,KAAlB,CAAwBC,eAAxB,CAA0Cf,eAA1C,CAClC,CAxBS,CAwBPgB,CAAC,CAAGjB,cAxBG,CAAV,CAyBD,CA1C8B,EAGjC,IAAK,GAAIiB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGI,UAAU,CAACQ,MAA/B,CAAuCZ,CAAC,EAAxC,CAA4C,QAAnCA,CAAmC,EAwC3C,CACF,CA5CD,CA8CA,GAAMyB,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAMrB,CAAAA,UAAU,CAAGrC,aAAa,CAACG,KAAD,CAAhC,CADiC,2BAExB8B,CAFwB,EAG/B,GAAMN,CAAAA,IAAI,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAb,CAH+B,kCAIAQ,UAAU,CAACJ,CAAD,CAJV,IAIxBK,SAJwB,mBAIbC,SAJa,mBAK/B,GAAMC,CAAAA,MAAM,CAAGb,IAAI,CAACW,SAAD,CAAJ,CAAgBP,KAA/B,CACA,GAAMU,CAAAA,MAAM,CAAGd,IAAI,CAACY,SAAD,CAAJ,CAAgBR,KAA/B,CACA,GAAMW,CAAAA,aAAa,CAAGT,CAAC,CAAG,CAAJ,GAAU,CAAhC,CACA,GAAIS,aAAJ,CAAmB,CAAE;AACnBC,UAAU,CAAC,UAAM,CACf,GAAMC,CAAAA,eAAe,CAAGX,CAAC,CAAG,CAAJ,GAAU,CAAV,CAAcf,SAAd,CAA0BD,eAAlD,CAAmE;AACnEuB,MAAM,CAACR,eAAP,CAAyBY,eAAzB,CACAH,MAAM,CAACT,eAAP,CAAyBY,eAAzB,CACD,CAJS,CAIPX,CAAC,CAAGjB,cAJG,CAAV,CAKD,CAND,IAMO,CACL2B,UAAU,CAAC,UAAM,CACf,GAAIV,CAAC,GAAKI,UAAU,CAACQ,MAAX,CAAoB,CAA9B,CAAiCC,aAAa,GAD/B,+BAEwBT,UAAU,CAACJ,CAAC,CAAG,CAAL,CAFlC,IAER0B,aAFQ,gBAEOC,aAFP,gBAGf,GAAItB,SAAS,GAAKqB,aAAd,EACCpB,SAAS,GAAKqB,aADf,EAECrB,SAAS,GAAKpC,KAAK,CAAC0C,MAAN,CAAe,CAF9B,EAGCZ,CAAC,GAAKI,UAAU,CAACQ,MAAX,CAAoB,CAH/B,CAGkC,CAChC,GAAME,CAAAA,UAAU,CAAGP,MAAM,CAACQ,MAA1B,CACAR,MAAM,CAACQ,MAAP,CAAgBP,MAAM,CAACO,MAAvB,CACAP,MAAM,CAACO,MAAP,CAAgBD,UAAhB,CACAP,MAAM,CAACR,eAAP,CAAyBb,UAAzB,CACD,CACD,GAAIc,CAAC,GAAKI,UAAU,CAACQ,MAAX,CAAoB,CAA9B,CAAiCjC,WAAW,CAAC,OAAD,CAAX,CAElC,CAdS,CAcPqB,CAAC,CAAGjB,cAdG,CAAV,CAeD,CA9B8B,EAEjC,IAAK,GAAIiB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGI,UAAU,CAACQ,MAA/B,CAAuCZ,CAAC,EAAxC,CAA4C,QAAnCA,CAAmC,EA6B3C,CAEF,CAjCD,CAmCA,GAAM4B,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAMxB,CAAAA,UAAU,CAAGpC,SAAS,CAACE,KAAD,CAA5B,CAD6B,2BAEpB8B,CAFoB,EAG3B,GAAMN,CAAAA,IAAI,CAAGC,QAAQ,CAACC,sBAAT,CAAgC,WAAhC,CAAb,CAH2B,kCAIcQ,UAAU,CAACJ,CAAD,CAJxB,IAIpBK,SAJoB,mBAITC,SAJS,mBAIEuB,QAJF,mBAK3B,GAAMtB,CAAAA,MAAM,CAAGb,IAAI,CAACW,SAAD,CAAJ,CAAgBP,KAA/B,CACA,GAAMU,CAAAA,MAAM,CAAGd,IAAI,CAACY,SAAD,CAAJ,CAAgBR,KAA/B,CACA,GAAMgC,CAAAA,QAAQ,CAAGpC,IAAI,CAACmC,QAAD,CAAJ,CAAe/B,KAAhC,CACA,GAAMW,CAAAA,aAAa,CAAGT,CAAC,CAAG,CAAJ,GAAU,CAAhC,CACA,GAAIS,aAAJ,CAAmB,CAAE;AACnBC,UAAU,CAAC,UAAM,CACf,GAAMC,CAAAA,eAAe,CAAGX,CAAC,CAAG,CAAJ,GAAU,CAAV,CAAcd,UAAd,CAA2BF,eAAnD,CAAoE;AACpE8C,QAAQ,CAAC/B,eAAT,CAA2Bd,SAA3B,CACAsB,MAAM,CAACR,eAAP,CAAyBY,eAAzB,CACAH,MAAM,CAACT,eAAP,CAAyBY,eAAzB,CACA,GAAIN,SAAS,GAAKwB,QAAd,EAA0BvB,SAAS,CAAG,CAA1C,CAA6C,CAC3CC,MAAM,CAACR,eAAP,CAAyB,QAAzB,CACAS,MAAM,CAACT,eAAP,CAAyB,QAAzB,CACD,CACF,CATS,CASPC,CAAC,CAAGjB,cATG,CAAV,CAUD,CAXD,IAWO,CACL2B,UAAU,CAAC,UAAM,CACf,GAAIV,CAAC,GAAKI,UAAU,CAACQ,MAAX,CAAoB,CAA9B,CAAiCC,aAAa,GAC9C,GAAKR,SAAS,GAAK,CAAd,EAAmBC,SAAS,GAAK,CAAlC,EAAqC;AACpCN,CAAC,GAAKI,UAAU,CAACQ,MAAX,CAAoB,CAD/B,CACkC,CAChC,GAAME,CAAAA,UAAU,CAAGP,MAAM,CAACQ,MAA1B,CACAR,MAAM,CAACQ,MAAP,CAAgBP,MAAM,CAACO,MAAvB,CACAP,MAAM,CAACO,MAAP,CAAgBD,UAAhB,CACAP,MAAM,CAACR,eAAP,CAAyBf,eAAzB,CACAwB,MAAM,CAACT,eAAP,CAAyBf,eAAzB,CACD,CAPD,IAOO,IAAIqB,SAAS,GAAKwB,QAAd,EAA0BvB,SAAS,CAAG,CAA1C,CAA6C,CAAE;AACpDwB,QAAQ,CAAC/B,eAAT,CAA2Bd,SAA3B,CACA,GAAM6B,CAAAA,WAAU,CAAGP,MAAM,CAACQ,MAA1B,CACAR,MAAM,CAACQ,MAAP,CAAgBP,MAAM,CAACO,MAAvB,CACAP,MAAM,CAACO,MAAP,CAAgBD,WAAhB,CACAgB,QAAQ,CAAC/B,eAAT,CAA2Bf,eAA3B,CAED,CACDwB,MAAM,CAACT,eAAP,CAAyBf,eAAzB,CACD,CAlBS,CAkBPgB,CAAC,CAAGjB,cAlBG,CAAV,CAmBD,CAxC0B,EAE7B,IAAK,GAAIiB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGI,UAAU,CAACQ,MAA/B,CAAuCZ,CAAC,EAAxC,CAA4C,QAAnCA,CAAmC,EAuC3C,CACF,CA1CD,CA4CA,GAAM+B,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,WAAW,CAAGrC,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,CAApB,CACAqC,KAAK,CAACC,IAAN,CAAWF,WAAX,EAAwBG,OAAxB,CAAgC,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,QAAP,CAAkB,IAAtB,EAAtC,EACA,GAAMC,CAAAA,KAAK,CAAG,CAACnC,iBAAD,CAAoBa,oBAApB,CAA0CS,oBAA1C,CAAgEG,gBAAhE,CAAd,CACA,GAAMW,CAAAA,aAAa,CAAG5C,QAAQ,CAAC6C,cAAT,CAAwB,iBAAxB,EAA2CC,OAA3C,CAAmDC,aAAzE,CACA,GAAMC,CAAAA,OAAO,CAAGC,MAAM,CAACL,aAAD,CAAtB,CACAD,KAAK,CAACK,OAAD,CAAL,GACD,CAPD,CASA,QAAS9B,CAAAA,aAAT,EAAyB,CACvB,GAAMmB,CAAAA,WAAW,CAAGrC,QAAQ,CAACC,sBAAT,CAAgC,SAAhC,CAApB,CACAqC,KAAK,CAACC,IAAN,CAAWF,WAAX,EAAwBG,OAAxB,CAAgC,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,QAAP,CAAkB,KAAtB,EAAtC,EACD,CAED,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,EACGnE,KAAK,CAAC2E,GAAN,CAAU,SAACpE,KAAD,CAAQuB,CAAR,qBACT,2BACE,SAAS,CAAC,WADZ,CAEE,GAAG,CAAEA,CAFP,CAGE,KAAK,CAAE,CACLe,MAAM,WAAKtC,KAAK,CAAG,EAAb,MADD,CAELsB,eAAe,CAAE,WAFZ,CAGL+C,KAAK,WAAK,GAAK1E,QAAV,MAHA,CAIL2E,OAAO,CAAE,cAJJ,CAKLC,MAAM,CAAE,CALH,CAMLC,YAAY,CAAE,MANT,CAHT,EADS,EAAV,CADH,CADF,cAkBE,2BAAK,SAAS,CAAC,oBAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BAAK,SAAS,CAAC,YAAf,eACE,6BAAO,QAAQ,CAAEnE,YAAjB,CACE,IAAI,CAAC,OADP,CAEE,GAAG,CAAC,KAFN,CAGE,GAAG,CAAC,KAHN,CAIE,IAAI,CAAC,IAJP,CAKE,SAAS,CAAC,yBALZ,CAME,EAAE,CAAC,UANL,CAOE,IAAI,CAAC,OAPP,EADF,cAUE,6BAAO,SAAS,CAAC,aAAjB,CAA+B,OAAO,CAAC,UAAvC,UAVF,CADF,cAaE,2BAAK,SAAS,CAAC,YAAf,eACE,6BAAO,QAAQ,CAAER,eAAjB,CACE,IAAI,CAAC,OADP,CAEE,GAAG,CAAC,GAFN,CAGE,GAAG,CAAC,KAHN,CAIE,KAAK,CAAEF,QAJT,CAKE,SAAS,CAAC,gBALZ,CAME,EAAE,CAAC,YANL,CAOE,IAAI,CAAC,QAPP,EADF,cAUE,6BAAO,SAAS,CAAC,aAAjB,CAA+B,OAAO,CAAC,YAAvC,WAVF,CAbF,CADF,cA2BE,2BAAK,SAAS,CAAC,SAAf,eACE,8BAAQ,SAAS,CAAC,SAAlB,CAA4B,KAAK,CAAC,gBAAlC,CAAmD,IAAI,CAAC,iBAAxD,CAA0E,EAAE,CAAC,iBAA7E,eACE,8BAAQ,KAAK,CAAC,QAAd,CAAuB,KAAK,CAAC,GAA7B,EADF,cAEE,8BAAQ,KAAK,CAAC,WAAd,CAA0B,KAAK,CAAC,GAAhC,EAFF,cAGE,8BAAQ,KAAK,CAAC,WAAd,CAA0B,KAAK,CAAC,GAAhC,EAHF,cAIE,8BAAQ,KAAK,CAAC,OAAd,CAAsB,KAAK,CAAC,GAA5B,EAJF,CADF,cAOE,8BAAQ,SAAS,CAAC,SAAlB,CAA4B,OAAO,CAAE2D,WAArC,UAPF,cAQE,8BAAQ,SAAS,CAAC,SAAlB,CAA4B,OAAO,CAAE,kBAAM,CACzCrD,UAAU,GACVC,WAAW,CAAC,WAAD,CAAX,CACD,CAHD,UARF,CA3BF,CAlBF,CADF,CA+DD,CAED,QAASuB,CAAAA,SAAT,CAAmBgD,GAAnB,CAAwBC,GAAxB,CAA6B,CAC3B,MAAO/D,CAAAA,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACgE,MAAL,IAAiBD,GAAG,CAAGD,GAAN,CAAY,CAA7B,EAAkCA,GAA7C,CAAP,CACD","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bubbleSort from './bubbleSort';\nimport insertionSort from './insertionSort';\nimport selectionSort from './selectionSort';\nimport quickSort from './quickSort';\nimport './SortingViz.css';\n\nexport default function SortingViz() {\n  const [array, setArray] = useState([]);\n  let [NUM_BARS, SET_NUM_BARS] = useState(20);\n  const handleBarChange = (e) => {\n    NUM_BARS = e.target.value;\n    SET_NUM_BARS(NUM_BARS);\n    resetArray()\n    resetColors()\n  }\n\n  let [SPEED, setSpeed] = useState(200)\n  const handleChange = (e) => {\n    SPEED = e.target.value;\n    setSpeed(SPEED)\n  }\n  let convertedSpeed = SPEED >= 100 && SPEED < 300\n    ? 400 - SPEED - 30\n    : SPEED >= 300 && SPEED < 350\n      ? 400 - SPEED - 94\n      : SPEED >= 350 && SPEED < 400\n        ? 400 - SPEED - 48\n        : 400 - SPEED;\n\n  let comparisonColor = 'green';\n  let swapColor = 'white';\n  let otherColor = 'orange';\n\n  const maxBarHeight = Math.floor(window.screen.availHeight / 10);\n\n  const resetColors = (color) => {\n    const bars = document.getElementsByClassName('array-bar');\n    for (const bar of bars) {\n      bar.style.backgroundColor = color;\n    }\n  }\n  const resetArray = () => {\n    const array = [];\n    for (let i = 0; i < NUM_BARS; i += 1) {\n      array.push(randomInt(5, maxBarHeight))\n    }\n    setArray(array)\n  }\n\n\n\n  useEffect(() => {\n    resetArray();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const bubbleSortAnimate = () => {\n    const animations = bubbleSort(array);\n    for (let i = 0; i < animations.length; i++) {\n      const bars = document.getElementsByClassName('array-bar');\n      const [barOneIdx, barTwoIdx] = animations[i];\n      const barOne = bars[barOneIdx].style;\n      const barTwo = bars[barTwoIdx].style;\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) { // if the index falls just BEFORE the swap (i.e. on 2nd comparison)\n        setTimeout(() => {\n          const currentBarColor = i % 3 === 0 ? swapColor : comparisonColor;\n          barOne.backgroundColor = currentBarColor;\n          barTwo.backgroundColor = currentBarColor;\n        }, i * convertedSpeed);\n      } else {\n        setTimeout(() => {\n          if (i === animations.length - 1) enableButtons();\n          if (barOneIdx > barTwoIdx) {\n            const tempHeight = barOne.height;\n            barOne.height = barTwo.height;\n            barTwo.height = tempHeight;\n            barOne.backgroundColor = otherColor;\n            if (barOneIdx === bars.length - 1) {\n              resetColors('green');\n            }\n          }\n        }, i * convertedSpeed);\n      }\n    }\n  }\n\n  const insertionSortAnimate = () => {\n    const animations = insertionSort(array);\n    const bars = document.getElementsByClassName('array-bar');\n    for (let i = 0; i < animations.length; i++) {\n      let [currIdx, otherIdx] = animations[i];\n      const barOne = bars[currIdx].style;\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) { // if the index falls just BEFORE the swap (i.e. on 2nd comparison)\n        setTimeout(() => {\n          const currentBarColor = i % 3 === 0 ? swapColor : comparisonColor; // if the index falls on the \"swap\" value...\n          barOne.backgroundColor = otherColor;\n          for (let i = currIdx - 1; i >= 0; i--) {\n            let bar = bars[i]\n            bar.style.backgroundColor = currentBarColor;\n          }\n        }, i * convertedSpeed)\n      } else {\n        setTimeout(() => {\n          if (i === animations.length - 1) enableButtons();\n          if (currIdx !== otherIdx) {\n            let initIdx = currIdx;\n            const splice = (currIdx, startIdx, subArr) => {\n              while (currIdx > startIdx) {\n                const temp = subArr[currIdx].style.height;\n                subArr[currIdx].style.height = subArr[currIdx - 1].style.height\n                subArr[currIdx - 1].style.height = temp\n                const tempColor = subArr[currIdx].style.backgroundColor;\n                subArr[currIdx].style.backgroundColor = subArr[currIdx - 1].style.backgroundColor\n                subArr[currIdx - 1].style.backgroundColor = tempColor\n                currIdx -= 1;\n              }\n            }\n            for (otherIdx; otherIdx < currIdx; otherIdx++) {\n              if (currIdx === initIdx) {\n                splice(currIdx, otherIdx, bars)\n                initIdx = -1;\n                otherIdx -= 1;\n              }\n            }\n          }\n          if (i === animations.length - 1) bars[currIdx - 1].style.backgroundColor = comparisonColor;\n        }, i * convertedSpeed)\n      }\n    }\n  }\n\n  const selectionSortAnimate = () => {\n    const animations = selectionSort(array);\n    for (let i = 0; i < animations.length; i++) {\n      const bars = document.getElementsByClassName('array-bar');\n      const [barOneIdx, barTwoIdx] = animations[i];\n      const barOne = bars[barOneIdx].style;\n      const barTwo = bars[barTwoIdx].style;\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) { // if the index falls just BEFORE the swap (i.e. on 2nd comparison)\n        setTimeout(() => {\n          const currentBarColor = i % 3 === 0 ? swapColor : comparisonColor; // if the index falls on the \"swap\" value...\n          barOne.backgroundColor = currentBarColor;\n          barTwo.backgroundColor = currentBarColor;\n        }, i * convertedSpeed)\n      } else {\n        setTimeout(() => {\n          if (i === animations.length - 1) enableButtons();\n          const [prevBarOneIdx, prevBarTwoIdx] = animations[i - 1];\n          if (barOneIdx !== prevBarOneIdx\n            || barTwoIdx !== prevBarTwoIdx\n            || barTwoIdx === array.length - 1\n            || i === animations.length - 1) {\n            const tempHeight = barOne.height;\n            barOne.height = barTwo.height;\n            barTwo.height = tempHeight;\n            barOne.backgroundColor = otherColor;\n          }\n          if (i === animations.length - 1) resetColors('green');\n\n        }, i * convertedSpeed)\n      }\n    }\n\n  }\n\n  const quickSortAnimate = () => {\n    const animations = quickSort(array);\n    for (let i = 0; i < animations.length; i++) {\n      const bars = document.getElementsByClassName('array-bar');\n      const [barOneIdx, barTwoIdx, pivotIdx] = animations[i];\n      const barOne = bars[barOneIdx].style;\n      const barTwo = bars[barTwoIdx].style;\n      const barPivot = bars[pivotIdx].style;\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) { // if the index falls just BEFORE the swap (i.e. on 2nd comparison)\n        setTimeout(() => {\n          const currentBarColor = i % 3 === 0 ? otherColor : comparisonColor; // if the index falls on the \"swap\" value...\n          barPivot.backgroundColor = swapColor;\n          barOne.backgroundColor = currentBarColor;\n          barTwo.backgroundColor = currentBarColor;\n          if (barOneIdx === pivotIdx && barTwoIdx > 0) {\n            barOne.backgroundColor = 'yellow';\n            barTwo.backgroundColor = 'yellow';\n          }\n        }, i * convertedSpeed)\n      } else {\n        setTimeout(() => {\n          if (i === animations.length - 1) enableButtons();\n          if ((barOneIdx !== 0 && barTwoIdx !== 0) // normal \"while\" swap\n            || i === animations.length - 1) {\n            const tempHeight = barOne.height;\n            barOne.height = barTwo.height;\n            barTwo.height = tempHeight;\n            barOne.backgroundColor = comparisonColor;\n            barTwo.backgroundColor = comparisonColor;\n          } else if (barOneIdx === pivotIdx && barTwoIdx > 0) { // special \"pivot\" swap\n            barPivot.backgroundColor = swapColor;\n            const tempHeight = barOne.height;\n            barOne.height = barTwo.height;\n            barTwo.height = tempHeight;\n            barPivot.backgroundColor = comparisonColor;\n\n          }\n          barTwo.backgroundColor = comparisonColor;\n        }, i * convertedSpeed)\n      }\n    }\n  }\n\n  const animateAlgo = () => {\n    const sortButtons = document.getElementsByClassName('disable');\n    Array.from(sortButtons).forEach(button => button.disabled = true);\n    const algos = [bubbleSortAnimate, insertionSortAnimate, selectionSortAnimate, quickSortAnimate]\n    const algoIdxString = document.getElementById('sorting-options').options.selectedIndex;\n    const algoIdx = Number(algoIdxString)\n    algos[algoIdx]();\n  }\n\n  function enableButtons() {\n    const sortButtons = document.getElementsByClassName('disable');\n    Array.from(sortButtons).forEach(button => button.disabled = false);\n  }\n\n  return (\n    <div className=\"algo-container\">\n      <div className=\"array-container\">\n        {array.map((value, i) => (\n          <div\n            className=\"array-bar\"\n            key={i}\n            style={{\n              height: `${value / 11}vh`,\n              backgroundColor: 'orangered',\n              width: `${90 / NUM_BARS}vh`,\n              display: 'inline-block',\n              margin: 1,\n              borderRadius: '10px'\n            }}\n          >\n          </div>\n        ))}\n      </div>\n      <div className='controls-container'>\n        <div className=\"slidercontainer\">\n          <div className='slideritem'>\n            <input onChange={handleChange}\n              type=\"range\"\n              min=\"200\"\n              max=\"400\"\n              step='50'\n              className=\"slidercontianer disable\"\n              id=\"my-range\"\n              name='Speed'\n            />\n            <label className='sliderlabel' htmlFor='my-range'>Speed</label>\n          </div>\n          <div className='slideritem'>\n            <input onChange={handleBarChange}\n              type=\"range\"\n              min=\"8\"\n              max=\"200\"\n              value={NUM_BARS}\n              className=\"slider disable\"\n              id=\"myBarRange\"\n              name='Length'\n            />\n            <label className='sliderlabel' htmlFor='myBarRange'>Length</label>\n          </div>\n        </div>\n        <div className=\"buttons\">\n          <select className='disable' label='Choose an Algo' name=\"sorting-options\" id=\"sorting-options\">\n            <option label='Bubble' value='0'></option>\n            <option label='Insertion' value='1'></option>\n            <option label='Selection' value='2'></option>\n            <option label='Quick' value='3'></option>\n          </select>\n          <button className='disable' onClick={animateAlgo}>Sort!</button>\n          <button className='disable' onClick={() => {\n            resetArray();\n            resetColors('orangered');\n          }}>Reset</button>\n        </div>\n      </div>\n    </div >\n  )\n\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) * min)\n}\n"]},"metadata":{},"sourceType":"module"}