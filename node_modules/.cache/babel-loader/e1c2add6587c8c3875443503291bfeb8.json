{"ast":null,"code":"import framerize from './util';\nexport default function insertionSort(array) {\n  const animations = [];\n\n  for (let i = 1; i < array.length; i++) {\n    let animation = {};\n    let j = i;\n    animation.comparison = [j, j - 1];\n\n    while (j > 0 && array[j] < array[j - 1]) {\n      animation.swap = [j, j - 1];\n      swap(j, j - 1, array);\n      j -= 1;\n    }\n\n    animations.push(animation);\n  }\n\n  return framerize(animation);\n}\n\nfunction swap(i, j, array) {\n  const temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/client/src/SortingViz/insertionSort.js"],"names":["framerize","insertionSort","array","animations","i","length","animation","j","comparison","swap","push","temp"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,QAAtB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAMC,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,SAAS,GAAG,EAAhB;AACA,QAAIC,CAAC,GAAGH,CAAR;AACAE,IAAAA,SAAS,CAACE,UAAV,GAAuB,CAACD,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAvB;;AACA,WAAOA,CAAC,GAAG,CAAJ,IAASL,KAAK,CAACK,CAAD,CAAL,GAAWL,KAAK,CAACK,CAAC,GAAG,CAAL,CAAhC,EAAyC;AACvCD,MAAAA,SAAS,CAACG,IAAV,GAAiB,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAjB;AACAE,MAAAA,IAAI,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,EAAWL,KAAX,CAAJ;AACAK,MAAAA,CAAC,IAAI,CAAL;AACD;;AACDJ,IAAAA,UAAU,CAACO,IAAX,CAAgBJ,SAAhB;AACD;;AACD,SAAON,SAAS,CAACM,SAAD,CAAhB;AACD;;AAED,SAASG,IAAT,CAAcL,CAAd,EAAiBG,CAAjB,EAAoBL,KAApB,EAA2B;AACzB,QAAMS,IAAI,GAAGT,KAAK,CAACE,CAAD,CAAlB;AACAF,EAAAA,KAAK,CAACE,CAAD,CAAL,GAAWF,KAAK,CAACK,CAAD,CAAhB;AACAL,EAAAA,KAAK,CAACK,CAAD,CAAL,GAAWI,IAAX;AACD","sourcesContent":["import framerize from './util';\n\nexport default function insertionSort(array) {\n  const animations = [];\n  for (let i = 1; i < array.length; i++) {\n    let animation = {}\n    let j = i;\n    animation.comparison = [j, j - 1]\n    while (j > 0 && array[j] < array[j - 1]) {\n      animation.swap = [j, j - 1];\n      swap(j, j - 1, array);\n      j -= 1;\n    }\n    animations.push(animation)\n  }\n  return framerize(animation);\n}\n\nfunction swap(i, j, array) {\n  const temp = array[i];\n  array[i] = array[j]\n  array[j] = temp\n}\n"]},"metadata":{},"sourceType":"module"}