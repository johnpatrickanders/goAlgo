{"ast":null,"code":"import framerize from'./util';export default function bubbleSort(array){// Write your code here.\nvar animations=[];var swapped=true;while(swapped){swapped=false;for(var i=0;i<array.length-1;i++){var animation={};animation.comparison=[i,i+1];if(array[i]>array[i+1]){animation.swap=[i+1,i];var first=array[i];var second=array[i+1];array[i]=second;array[i+1]=first;swapped=true;}else{animation.swap=[i,i+1];}animations.push(animation);}}return framerize(animations);}","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/src/SortingViz/bubbleSort.js"],"names":["framerize","bubbleSort","array","animations","swapped","i","length","animation","comparison","swap","first","second","push"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,QAAtB,CAEA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACxC;AACA,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACA,GAAIC,CAAAA,OAAO,CAAG,IAAd,CACA,MAAOA,OAAP,CAAgB,CACdA,OAAO,CAAG,KAAV,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,KAAK,CAACI,MAAN,CAAe,CAAnC,CAAsCD,CAAC,EAAvC,CAA2C,CACzC,GAAME,CAAAA,SAAS,CAAG,EAAlB,CACAA,SAAS,CAACC,UAAV,CAAuB,CAACH,CAAD,CAAIA,CAAC,CAAG,CAAR,CAAvB,CACA,GAAIH,KAAK,CAACG,CAAD,CAAL,CAAWH,KAAK,CAACG,CAAC,CAAG,CAAL,CAApB,CAA6B,CAC3BE,SAAS,CAACE,IAAV,CAAiB,CAACJ,CAAC,CAAG,CAAL,CAAQA,CAAR,CAAjB,CACA,GAAMK,CAAAA,KAAK,CAAGR,KAAK,CAACG,CAAD,CAAnB,CACA,GAAMM,CAAAA,MAAM,CAAGT,KAAK,CAACG,CAAC,CAAG,CAAL,CAApB,CACAH,KAAK,CAACG,CAAD,CAAL,CAAWM,MAAX,CACAT,KAAK,CAACG,CAAC,CAAG,CAAL,CAAL,CAAeK,KAAf,CACAN,OAAO,CAAG,IAAV,CACD,CAPD,IAOO,CACLG,SAAS,CAACE,IAAV,CAAiB,CAACJ,CAAD,CAAIA,CAAC,CAAG,CAAR,CAAjB,CACD,CACDF,UAAU,CAACS,IAAX,CAAgBL,SAAhB,EACD,CACF,CACD,MAAOP,CAAAA,SAAS,CAACG,UAAD,CAAhB,CACD","sourcesContent":["import framerize from './util';\n\nexport default function bubbleSort(array) {\n  // Write your code here.\n  const animations = []\n  let swapped = true;\n  while (swapped) {\n    swapped = false;\n    for (let i = 0; i < array.length - 1; i++) {\n      const animation = {};\n      animation.comparison = [i, i + 1];\n      if (array[i] > array[i + 1]) {\n        animation.swap = [i + 1, i];\n        const first = array[i];\n        const second = array[i + 1];\n        array[i] = second;\n        array[i + 1] = first;\n        swapped = true;\n      } else {\n        animation.swap = [i, i + 1];\n      }\n      animations.push(animation)\n    }\n  }\n  return framerize(animations);\n}\n"]},"metadata":{},"sourceType":"module"}