{"ast":null,"code":"var _jsxFileName = \"/Users/jpa/Desktop/goAlgo/src/About/WhatsAnAlgorithm.js\";\nimport React, { useEffect } from 'react';\nimport './about.css';\nexport default function () {\n  let lines = ['so...what\\'s an algorithm?', 'and why would you need one?', 'and what do they look like?'];\n  useEffect(() => {\n    showLines(); // const navBar = document.getElementById('navbar');\n    // console.log(navBar)\n    // navBar.hidden = true;\n  }, []);\n\n  const showLines = altDomArray => {\n    const domLines = document.getElementsByClassName('invisible-lines');\n\n    for (let i = 0; i < domLines.length; i++) {\n      const domLine = domLines[i];\n      console.log(domLine);\n      setTimeout(() => {\n        domLine.classList.add('line');\n        domLine.hidden = false;\n\n        if (i === domLines.length - 1) {\n          setTimeout(() => {\n            const exploreToggles = document.getElementById('explore');\n            exploreToggles.style.display = 'flex';\n            exploreToggles.style.justifyContent = 'center';\n            exploreToggles.hidden = false;\n          }, 3000);\n        }\n      }, 3300 * i);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lines\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, lines.map(line => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"invisible-lines\",\n      hidden: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 57\n      }\n    }, line), \" \");\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"explore\",\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => window.location = '/sorting',\n    src: \"apple-touch-icon.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"An algorithm is a process determined by rules a computer can follow. The process happens for a provided group of things, or data.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Perhaps your phone wants to get you to the nearest grocery store, or show you your mutual friend connections.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Your phone doesn't just know. Someone taught it how to know. Someone left it a letter.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"That someone is a Software Engineer, and that letter is an algorithm.*\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontSize: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"*Yes, it's a bit more complicated than that, but haven't we already argued enough this year?\"))));\n}","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/src/About/WhatsAnAlgorithm.js"],"names":["React","useEffect","lines","showLines","altDomArray","domLines","document","getElementsByClassName","i","length","domLine","console","log","setTimeout","classList","add","hidden","exploreToggles","getElementById","style","display","justifyContent","map","line","window","location","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AAEA,eAAe,YAAY;AACzB,MAAIC,KAAK,GAAG,CAAC,4BAAD,EACV,6BADU,EAEV,6BAFU,CAAZ;AAKAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,GADK,CAEd;AACA;AACA;AAED,GANQ,EAMN,EANM,CAAT;;AASA,QAAMA,SAAS,GAAIC,WAAD,IAAiB;AACjC,UAAMC,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,iBAAhC,CAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,YAAME,OAAO,GAAGL,QAAQ,CAACG,CAAD,CAAxB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAG,MAAAA,UAAU,CAAC,MAAM;AACfH,QAAAA,OAAO,CAACI,SAAR,CAAkBC,GAAlB,CAAsB,MAAtB;AACAL,QAAAA,OAAO,CAACM,MAAR,GAAiB,KAAjB;;AACA,YAAIR,CAAC,KAAKH,QAAQ,CAACI,MAAT,GAAkB,CAA5B,EAA+B;AAC7BI,UAAAA,UAAU,CAAC,MAAM;AACf,kBAAMI,cAAc,GAAGX,QAAQ,CAACY,cAAT,CAAwB,SAAxB,CAAvB;AACAD,YAAAA,cAAc,CAACE,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;AACAH,YAAAA,cAAc,CAACE,KAAf,CAAqBE,cAArB,GAAsC,QAAtC;AACAJ,YAAAA,cAAc,CAACD,MAAf,GAAwB,KAAxB;AACD,WALS,EAKP,IALO,CAAV;AAMD;AACF,OAXS,EAWP,OAAOR,CAXA,CAAV;AAYD;AACF,GAlBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACoB,GAAN,CAAWC,IAAD,IAAU;AACnB,wBAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,MAAM,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,IAAJ,CAAzC,MAAP;AACD,GAFA,CADH,eAIE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAkB,IAAA,MAAM,EAAE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,OAAO,EAAE,MAAMC,MAAM,CAACC,QAAP,GAAkB,UAAtC;AAAkD,IAAA,GAAG,EAAC,sBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8FAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EALF,eAME;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGANF,CAJF,CAJF,CADF;AAqBD","sourcesContent":["import React, { useEffect } from 'react';\nimport './about.css';\n\nexport default function () {\n  let lines = ['so...what\\'s an algorithm?',\n    'and why would you need one?',\n    'and what do they look like?'\n  ]\n\n  useEffect(() => {\n    showLines()\n    // const navBar = document.getElementById('navbar');\n    // console.log(navBar)\n    // navBar.hidden = true;\n\n  }, [])\n\n\n  const showLines = (altDomArray) => {\n    const domLines = document.getElementsByClassName('invisible-lines');\n    for (let i = 0; i < domLines.length; i++) {\n      const domLine = domLines[i];\n      console.log(domLine)\n      setTimeout(() => {\n        domLine.classList.add('line');\n        domLine.hidden = false;\n        if (i === domLines.length - 1) {\n          setTimeout(() => {\n            const exploreToggles = document.getElementById('explore');\n            exploreToggles.style.display = 'flex';\n            exploreToggles.style.justifyContent = 'center';\n            exploreToggles.hidden = false;\n          }, 3000)\n        }\n      }, 3300 * i)\n    }\n  }\n  return (\n    <div className='lines'>\n      {lines.map((line) => {\n        return <div className='invisible-lines' hidden> <p>{line}</p> </div>\n      })}\n      <div id='explore' hidden={true}>\n\n        <img onClick={() => window.location = '/sorting'} src='apple-touch-icon.png'></img>\n\n        <span>\n          <p>An algorithm is a process determined by rules a computer can follow.\n              The process happens for a provided group of things, or data.</p>\n          <p>Perhaps your phone wants to get you to the nearest grocery store, or show you your mutual friend connections.</p>\n          <p>Your phone doesn't just know. Someone taught it how to know. Someone left it a letter.</p>\n          <p>That someone is a Software Engineer, and that letter is an algorithm.*</p>\n          <p style={{ fontSize: '10px' }}>*Yes, it's a bit more complicated than that, but haven't we already argued\n                                            enough this year?</p>\n        </span>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}