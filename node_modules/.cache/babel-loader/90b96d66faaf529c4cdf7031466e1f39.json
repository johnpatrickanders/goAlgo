{"ast":null,"code":"import framerize from './util';\nexport default function insertionSort(array) {\n  const animations = [];\n\n  for (let i = 1; i < array.length; i++) {\n    let j = i;\n    animations.push({\n      comparison: [j, j - 1],\n      swap: [0, 0]\n    });\n    console.log(animations[0]);\n\n    while (j > 0 && array[j] < array[j - 1]) {\n      swap(j, j - 1, array);\n      animations.push({\n        comparison: [j, j - 1],\n        swap: [j, j - 1]\n      });\n      j -= 1;\n    }\n  }\n\n  return framerize(animations);\n}\n\nfunction swap(i, j, array) {\n  const temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}","map":{"version":3,"sources":["/Users/jpa/Desktop/goAlgo/src/SortingViz/insertionSort.js"],"names":["framerize","insertionSort","array","animations","i","length","j","push","comparison","swap","console","log","temp"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,QAAtB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C,QAAMC,UAAU,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,CAAC,GAAGF,CAAR;AACAD,IAAAA,UAAU,CAACI,IAAX,CAAgB;AAAEC,MAAAA,UAAU,EAAE,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAd;AAA0BG,MAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAhC,KAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,UAAU,CAAC,CAAD,CAAtB;;AAEA,WAAOG,CAAC,GAAG,CAAJ,IAASJ,KAAK,CAACI,CAAD,CAAL,GAAWJ,KAAK,CAACI,CAAC,GAAG,CAAL,CAAhC,EAAyC;AACvCG,MAAAA,IAAI,CAACH,CAAD,EAAIA,CAAC,GAAG,CAAR,EAAWJ,KAAX,CAAJ;AACAC,MAAAA,UAAU,CAACI,IAAX,CAAgB;AAAEC,QAAAA,UAAU,EAAE,CAACF,CAAD,EAAIA,CAAC,GAAG,CAAR,CAAd;AAA0BG,QAAAA,IAAI,EAAE,CAACH,CAAD,EAAIA,CAAC,GAAG,CAAR;AAAhC,OAAhB;AACAA,MAAAA,CAAC,IAAI,CAAL;AAED;AACF;;AACD,SAAON,SAAS,CAACG,UAAD,CAAhB;AACD;;AAED,SAASM,IAAT,CAAcL,CAAd,EAAiBE,CAAjB,EAAoBJ,KAApB,EAA2B;AACzB,QAAMU,IAAI,GAAGV,KAAK,CAACE,CAAD,CAAlB;AACAF,EAAAA,KAAK,CAACE,CAAD,CAAL,GAAWF,KAAK,CAACI,CAAD,CAAhB;AACAJ,EAAAA,KAAK,CAACI,CAAD,CAAL,GAAWM,IAAX;AACD","sourcesContent":["import framerize from './util';\n\nexport default function insertionSort(array) {\n  const animations = [];\n  for (let i = 1; i < array.length; i++) {\n    let j = i;\n    animations.push({ comparison: [j, j - 1], swap: [0, 0] });\n    console.log(animations[0])\n\n    while (j > 0 && array[j] < array[j - 1]) {\n      swap(j, j - 1, array);\n      animations.push({ comparison: [j, j - 1], swap: [j, j - 1] });\n      j -= 1;\n\n    }\n  }\n  return framerize(animations);\n}\n\nfunction swap(i, j, array) {\n  const temp = array[i];\n  array[i] = array[j]\n  array[j] = temp\n}\n"]},"metadata":{},"sourceType":"module"}